Coverage Report by instance with details

=================================================================================
=== Instance: /WRAPPER_top/wrapper_if
=== Design Unit: work.WRAPPER_IF
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         12        12         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/wrapper_if --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                          MISO_ref           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 

Total Node Count     =          6 
Toggled Node Count   =          6 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (12 of 12 bins)

=================================================================================
=== Instance: /WRAPPER_top/ram_if
=== Design Unit: work.RAM_IF
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         62        62         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/ram_if --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[0-7]           1           1                              100.00 
                                     dout_ref[0-7]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 
                                      tx_valid_ref           1           1                              100.00 

Total Node Count     =         31 
Toggled Node Count   =         31 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (62 of 62 bins)

=================================================================================
=== Instance: /WRAPPER_top/slave_if
=== Design Unit: work.SPI_slave_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         74        74         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/slave_if --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                          MISO_ref           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                  rx_data_ref[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      rx_valid_ref           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         37 
Toggled Node Count   =         37 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (74 of 74 bins)

=================================================================================
=== Instance: /WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst
=== Design Unit: work.RAM_sva
=================================================================================

Assertion Coverage:
    Assertions                       8         8         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_reset_txValid
                     RAM_sva.sv(23)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_reset_dout
                     RAM_sva.sv(24)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_addr
                     RAM_sva.sv(26)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_data
                     RAM_sva.sv(27)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_addr
                     RAM_sva.sv(28)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_data
                     RAM_sva.sv(30)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_addr_to_wr_data
                     RAM_sva.sv(32)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_addr_to_rd_data
                     RAM_sva.sv(33)                     0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         5         5         0   100.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_sva.sv
------------------------------------CASE Branch------------------------------------
    12                                       169     Count coming in to CASE
    13              1                         47                 2'b00 : op = WRITE_ADDR;
    14              1                         36                 2'b01 : op = WRITE_DATA;
    15              1                         46                 2'b10 : op = READ_ADDR;
    16              1                         39                 2'b11 : op = READ_DATA;
                                               1     All False Count
Branch totals: 5 hits of 5 branches = 100.00%



Directive Coverage:
    Directives                       8         8         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_reset_txValid_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(36)    29 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_reset_dout_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(37)    29 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_addr_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(39)   870 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_data_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(40)   696 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_addr_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(41)   305 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_data_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(43)     9 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_addr_to_wr_data_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(45)    78 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_addr_to_rd_data_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(46)    72 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       5         5         0   100.00%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_sva.sv
    2                                                module RAM_sva(din,clk,rst_n,rx_valid,dout,tx_valid);
    3                                                    input      [9:0] din;
    4                                                    input            clk, rst_n, rx_valid;
    5                                                
    6                                                    input  [7:0] dout;
    7                                                    input       tx_valid;
    8                                                
    9                                                    op_e op;
    10                                               
    11              1                        169         always_comb begin
    12                                                       case (din[9:8])
    13              1                         47                 2'b00 : op = WRITE_ADDR;
    14              1                         36                 2'b01 : op = WRITE_DATA;
    15              1                         46                 2'b10 : op = READ_ADDR;
    16              1                         39                 2'b11 : op = READ_DATA;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         48        48         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[0-7]           1           1                              100.00 
                                                op               ENUM type       Value       Count 
                                                                WRITE_ADDR          20      100.00 
                                                                WRITE_DATA          20      100.00 
                                                                 READ_ADDR           1      100.00 
                                                                 READ_DATA           1      100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         26 
Toggled Node Count   =         26 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (48 of 48 bins)

=================================================================================
=== Instance: /WRAPPER_top/DUT_WRAPPER/RAM_instance
=== Design Unit: work.RAM
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         7         1    87.50%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_top/DUT_WRAPPER/RAM_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM.v
------------------------------------IF Branch------------------------------------
    14                                      1437     Count coming in to IF
    14              1                         29         if (~rst_n) begin
    21              1                        313             if (rx_valid) begin
                                            1095     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    22                                       313     Count coming in to CASE
    23              1                        108                     2'b00 : Wr_Addr <= din[7:0];
    24              1                         96                     2'b01 : MEM[Wr_Addr] <= din[7:0];
    25              1                         73                     2'b10 : Rd_Addr <= din[7:0];
    26              1                         36                     2'b11 : dout <= MEM[Rd_Addr]; // read addr instead of write addr //M2
    27              1                    ***0***                     default : dout <= 0;
Branch totals: 4 hits of 5 branches = 80.00%


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      2         2         0   100.00%

================================Expression Details================================

Expression Coverage for instance /WRAPPER_top/DUT_WRAPPER/RAM_instance --

  File RAM.v
----------------Focused Expression View-----------------
Line       29 Item    1  (din[9] && din[8])
Expression totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
      din[9]         Y
      din[8]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  din[9]_0              -                             
  Row   2:          1  din[9]_1              din[8]                        
  Row   3:          1  din[8]_0              din[9]                        
  Row   4:          1  din[8]_1              din[9]                        


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11        10         1    90.90%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_top/DUT_WRAPPER/RAM_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM.v
    1                                                module RAM (din,clk,rst_n,rx_valid,dout,tx_valid);
    2                                                
    3                                                input      [9:0] din;
    4                                                input            clk, rst_n, rx_valid;
    5                                                
    6                                                output reg [7:0] dout;
    7                                                output reg       tx_valid;
    8                                                
    9                                                reg [7:0] MEM [255:0];
    10                                               
    11                                               reg [7:0] Rd_Addr, Wr_Addr;
    12                                               
    13              1                       1437     always @(posedge clk) begin
    14                                                   if (~rst_n) begin
    15              1                         29             dout <= 0;
    16              1                         29             tx_valid <= 0;
    17              1                         29             Rd_Addr <= 0;
    18              1                         29             Wr_Addr <= 0;
    19                                                   end
    20                                                   else                                    
    21                                                       if (rx_valid) begin
    22                                                           case (din[9:8])
    23              1                        108                     2'b00 : Wr_Addr <= din[7:0];
    24              1                         96                     2'b01 : MEM[Wr_Addr] <= din[7:0];
    25              1                         73                     2'b10 : Rd_Addr <= din[7:0];
    26              1                         36                     2'b11 : dout <= MEM[Rd_Addr]; // read addr instead of write addr //M2
    27              1                    ***0***                     default : dout <= 0;
    28                                                           endcase
    29              1                        313                 tx_valid <= (din[9] && din[8])? 1'b1 : 1'b0; //Begin - end //M1

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/DUT_WRAPPER/RAM_instance --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                      Rd_Addr[0-7]           1           1                              100.00 
                                      Wr_Addr[0-7]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[0-7]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /WRAPPER_top/DUT_WRAPPER/SLAVE_instance
=== Design Unit: work.SLAVE
=================================================================================

Assertion Coverage:
    Assertions                      16        16         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__received_address_p2
                     SPI_slave.sv(236)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__received_address_p1
                     SPI_slave.sv(235)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__counter_write_p
                     SPI_slave.sv(234)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__counter_rst_p
                     SPI_slave.sv(233)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p9
                     SPI_slave.sv(232)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p8
                     SPI_slave.sv(231)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p7
                     SPI_slave.sv(230)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p6
                     SPI_slave.sv(229)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p4
                     SPI_slave.sv(228)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p3
                     SPI_slave.sv(227)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p2
                     SPI_slave.sv(226)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p1
                     SPI_slave.sv(225)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__rx_valid_p
                     SPI_slave.sv(224)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__read_seq_p
                     SPI_slave.sv(223)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__write_seq_p
                     SPI_slave.sv(222)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__rst_p
                     SPI_slave.sv(221)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        40        38         2    95.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_top/DUT_WRAPPER/SLAVE_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave.sv
------------------------------------IF Branch------------------------------------
    20                                       795     Count coming in to IF
    20              1                         29         if (~rst_n) begin
    23              1                        766         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    29                                      2232     Count coming in to CASE
    30              1                        394             IDLE : begin
    36              1                        307             CHK_CMD : begin
    50              1                        769             WRITE : begin
    56              1                        322             READ_ADD : begin
    62              1                        439             READ_DATA : begin
                                               1     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    31                                       394     Count coming in to IF
    31              1                        179                 if (SS_n)
    33              1                        215                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    37                                       307     Count coming in to IF
    37              1                    ***0***                 if (SS_n)
    39              1                        307                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    40                                       307     Count coming in to IF
    40              1                        161                     if (~MOSI)
    42              1                        146                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    43                                       146     Count coming in to IF
    43              1                        110                         if (!received_address) 
    45              1                         36                         else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    51                                       769     Count coming in to IF
    51              1                        106                 if (SS_n)
    53              1                        663                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                       322     Count coming in to IF
    57              1                         37                 if (SS_n)
    59              1                        285                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    63                                       439     Count coming in to IF
    63              1                         33                 if (SS_n)
    65              1                        406                 else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    72                                      3001     Count coming in to IF
    72              1                         29         if (~rst_n) begin 
    78              1                       2972         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    79                                      2972     Count coming in to CASE
    80              1                        199                 IDLE : begin
    83              1                        197                 CHK_CMD : begin
    86              1                       1341                 WRITE : begin
    95              1                        469                 READ_ADD : begin
    105             1                        766                 READ_DATA : begin
    128             1                    ***0***                 default:  ;
Branch totals: 5 hits of 6 branches = 83.33%

------------------------------------IF Branch------------------------------------
    87                                      1341     Count coming in to IF
    87              1                       1132                     if (counter > 0) begin
    91              1                        209                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    96                                       469     Count coming in to IF
    96              1                        395                     if (counter > 0) begin
    100             1                         74                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    106                                      766     Count coming in to IF
    106             1                        334                     if (tx_valid) begin
    116             1                        432                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    108                                      334     Count coming in to IF
    108             1                        268                         if (counter > 0) begin
    112             1                         66                         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    117                                      432     Count coming in to IF
    117             1                        396                         if (counter > 0) begin
    122             1                         36                         else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_top/DUT_WRAPPER/SLAVE_instance --

  File SPI_slave.sv
----------------Focused Condition View-------------------
Line       87 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       96 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       108 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             

----------------Focused Condition View-------------------
Line       117 Item    1  (counter > 0)
Condition totals: 1 of 1 input term covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  (counter > 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (counter > 0)_0       -                             
  Row   2:          1  (counter > 0)_1       -                             



Directive Coverage:
    Directives                      16        16         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__received_address_p2 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(253)
                                                                                65 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__received_address_p1 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(252)
                                                                                73 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__counter_write_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(251)
                                                                              2172 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__counter_rst_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(250)
                                                                               195 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p9 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(249)
                                                                               730 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p8 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(248)
                                                                               427 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p7 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(247)
                                                                              1224 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p6 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(246)
                                                                                42 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p4 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(245)
                                                                                36 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p3 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(244)
                                                                               117 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p2 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(243)
                                                                               197 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p1 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(242)
                                                                               172 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__rx_valid_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(241)
                                                                               131 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__read_seq_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(240)
                                                                                68 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__write_seq_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(239)
                                                                               101 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__rst_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(238)
                                                                                29 Covered   
FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /WRAPPER_top/DUT_WRAPPER/SLAVE_instance --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  30                IDLE                   0
  36             CHK_CMD                   1
  62           READ_DATA                   4
  56            READ_ADD                   3
  50               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                 205          
                 CHK_CMD                 198          
               READ_DATA                  72          
                READ_ADD                  84          
                   WRITE                 236          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  34                   0                 198          IDLE -> CHK_CMD               
  46                   1                  36          CHK_CMD -> READ_DATA          
  44                   2                  42          CHK_CMD -> READ_ADD           
  41                   3                 119          CHK_CMD -> WRITE              
  38                   4                   1          CHK_CMD -> IDLE               
  64                   5                  36          READ_DATA -> IDLE             
  58                   6                  42          READ_ADD -> IDLE              
  52                   7                 118          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      39        38         1    97.43%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_top/DUT_WRAPPER/SLAVE_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave.sv
    1                                                module SLAVE (MOSI,MISO,SS_n,clk,rst_n,rx_data,rx_valid,tx_data,tx_valid);
    2                                                
    3                                                localparam IDLE      = 3'b000;
    4                                                localparam CHK_CMD   = 3'b001;
    5                                                localparam WRITE     = 3'b010;
    6                                                localparam READ_ADD  = 3'b011;
    7                                                localparam READ_DATA = 3'b100;
    8                                                
    9                                                input            MOSI, clk, rst_n, SS_n, tx_valid;
    10                                               input      [7:0] tx_data;
    11                                               output reg [9:0] rx_data;
    12                                               output reg       rx_valid, MISO;
    13                                               
    14                                               reg [3:0] counter;
    15                                               reg       received_address;
    16                                               
    17                                               reg [2:0] cs, ns;
    18                                               
    19              1                        795     always @(posedge clk) begin
    20                                                   if (~rst_n) begin
    21              1                         29             cs <= IDLE;
    22                                                   end
    23                                                   else begin
    24              1                        766             cs <= ns;
    25                                                   end
    26                                               end
    27                                               
    28              1                       2232     always @(*) begin
    29                                                   case (cs)
    30                                                       IDLE : begin
    31                                                           if (SS_n)
    32              1                        179                     ns = IDLE;
    33                                                           else
    34              1                        215                     ns = CHK_CMD;
    35                                                       end
    36                                                       CHK_CMD : begin
    37                                                           if (SS_n)
    38              1                    ***0***                     ns = IDLE;
    39                                                           else begin
    40                                                               if (~MOSI)
    41              1                        161                         ns = WRITE;
    42                                                               else begin
    43                                                                   if (!received_address) 
    44              1                        110                             ns = READ_ADD; 
    45                                                                   else
    46              1                         36                             ns = READ_DATA;
    47                                                               end
    48                                                           end
    49                                                       end
    50                                                       WRITE : begin
    51                                                           if (SS_n)
    52              1                        106                     ns = IDLE;
    53                                                           else
    54              1                        663                     ns = WRITE;
    55                                                       end
    56                                                       READ_ADD : begin
    57                                                           if (SS_n)
    58              1                         37                     ns = IDLE;
    59                                                           else
    60              1                        285                     ns = READ_ADD;
    61                                                       end
    62                                                       READ_DATA : begin
    63                                                           if (SS_n)
    64              1                         33                     ns = IDLE;
    65                                                           else
    66              1                        406                     ns = READ_DATA;
    67                                                       end
    68                                                   endcase
    69                                               end
    70                                               
    71              1                       3001     always @(posedge clk) begin
    72                                                   if (~rst_n) begin 
    73              1                         29             rx_data <= 0;
    74              1                         29             rx_valid <= 0;
    75              1                         29             received_address <= 0;
    76              1                         29             MISO <= 0;
    77                                                   end
    78                                                   else begin
    79                                                       case (cs)
    80                                                           IDLE : begin
    81              1                        199                     rx_valid <= 0;
    82                                                           end
    83                                                           CHK_CMD : begin
    84              1                        197                     counter <= 10;      
    85                                                           end
    86                                                           WRITE : begin
    87                                                               if (counter > 0) begin
    88              1                       1132                         rx_data[counter-1] <= MOSI;
    89              1                       1132                         counter <= counter - 1;
    90                                                               end
    91                                                               else begin
    92              1                        209                         rx_valid <= 1;
    93                                                               end
    94                                                           end
    95                                                           READ_ADD : begin
    96                                                               if (counter > 0) begin
    97              1                        395                         rx_data[counter-1] <= MOSI;
    98              1                        395                         counter <= counter - 1;
    99                                                               end
    100                                                              else begin
    101             1                         74                         rx_valid <= 1;
    102             1                         74                         received_address <= 1;
    103                                                              end
    104                                                          end
    105                                                          READ_DATA : begin
    106                                                              if (tx_valid) begin
    107             1                        334                         rx_valid <= 0;
    108                                                                  if (counter > 0) begin
    109             1                        268                             MISO <= tx_data[counter-1];
    110             1                        268                             counter <= counter - 1;
    111                                                                  end
    112                                                                  else begin
    113             1                         66                             received_address <= 0;
    114                                                                  end
    115                                                              end
    116                                                              else begin
    117                                                                  if (counter > 0) begin
    118             1                        396                             rx_data[counter-1] <= MOSI;
    119             1                        396                             counter <= counter - 1;
    120             1                        396                             rx_valid <= 0;
    121                                                                  end
    122                                                                  else begin
    123             1                         36                             rx_valid <= 1;
    124             1                         36                             counter <= 9;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         72        72         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/DUT_WRAPPER/SLAVE_instance --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                      counter[0-3]           1           1                              100.00 
                                           cs[0-2]           1           1                              100.00 
                                           ns[0-2]           1           1                              100.00 
                                  received_address           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         36 
Toggled Node Count   =         36 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (72 of 72 bins)

=================================================================================
=== Instance: /WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst
=== Design Unit: work.WRAPPER_sva
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst/assert__MISO_wrapper_p
                     WRAPPER_sva.sv(18)                 0          1
/WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst/assert__rst_wrapper_p
                     WRAPPER_sva.sv(17)                 0          1

Directive Coverage:
    Directives                       2         2         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst/cover__MISO_wrapper_p 
                                         WRAPPER_sva Verilog  SVA  WRAPPER_sva.sv(21)
                                                                              2183 Covered   
/WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst/cover__rst_wrapper_p 
                                         WRAPPER_sva Verilog  SVA  WRAPPER_sva.sv(20)
                                                                                29 Covered   
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         40        40         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                    operation[0-2]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                  rx_data_din[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         20 
Toggled Node Count   =         20 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (40 of 40 bins)

=================================================================================
=== Instance: /WRAPPER_top/DUT_WRAPPER
=== Design Unit: work.WRAPPER
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        50         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/DUT_WRAPPER --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                  rx_data_din[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                 tx_data_dout[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         25 
Toggled Node Count   =         25 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (50 of 50 bins)

=================================================================================
=== Instance: /WRAPPER_top/GM_WRAPPER/RAM_instance
=== Design Unit: work.RAM_ref
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         8         0   100.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_top/GM_WRAPPER/RAM_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_ref.v
------------------------------------IF Branch------------------------------------
    15                                      1437     Count coming in to IF
    15              1                         29         if(~rst_n) begin
    21              1                       1408         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    22                                      1408     Count coming in to IF
    22              1                        313             if(rx_valid) begin
                                            1095     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    23                                       313     Count coming in to IF
    23              1                        108                 if(rx_data[9:8] == 2'b00) begin
    27              1                         96                 else if(rx_data[9:8] == 2'b01) begin 
    31              1                         73                 else if(rx_data[9:8] == 2'b10) begin 
    35              1                         36                 else begin 
Branch totals: 4 hits of 4 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       3         3         0   100.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_top/GM_WRAPPER/RAM_instance --

  File RAM_ref.v
----------------Focused Condition View-------------------
Line       23 Item    1  (rx_data[9:8] == 0)
Condition totals: 1 of 1 input term covered = 100.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (rx_data[9:8] == 0)         Y

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (rx_data[9:8] == 0)_0  -                             
  Row   2:          1  (rx_data[9:8] == 0)_1  -                             

----------------Focused Condition View-------------------
Line       27 Item    1  (rx_data[9:8] == 1)
Condition totals: 1 of 1 input term covered = 100.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (rx_data[9:8] == 1)         Y

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (rx_data[9:8] == 1)_0  -                             
  Row   2:          1  (rx_data[9:8] == 1)_1  -                             

----------------Focused Condition View-------------------
Line       31 Item    1  (rx_data[9:8] == 2)
Condition totals: 1 of 1 input term covered = 100.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (rx_data[9:8] == 2)         Y

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (rx_data[9:8] == 2)_0  -                             
  Row   2:          1  (rx_data[9:8] == 2)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13        13         0   100.00%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_top/GM_WRAPPER/RAM_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_ref.v
    1                                                module RAM_ref #(
    2                                                    parameter ADDR_SIZE = 8,
    3                                                    parameter MEM_DEPTH = 256
    4                                                ) (
    5                                                    input clk, rst_n, rx_valid,
    6                                                    input[9:0] rx_data,
    7                                                    output reg tx_valid,
    8                                                    output reg[7:0] tx_data
    9                                                );
    10                                               
    11                                               reg[ADDR_SIZE-1:0] mem [MEM_DEPTH-1:0];
    12                                               reg[ADDR_SIZE-1:0] wr_address, rd_address;
    13                                               
    14              1                       1437     always @(posedge clk) begin
    15                                                   if(~rst_n) begin
    16              1                         29             tx_valid <= 0;
    17              1                         29             tx_data <= 0;
    18              1                         29             rd_address <= 0;
    19              1                         29             wr_address <= 0;
    20                                                   end
    21                                                   else begin
    22                                                       if(rx_valid) begin
    23                                                           if(rx_data[9:8] == 2'b00) begin
    24              1                        108                     wr_address <= rx_data[7:0];
    25              1                        108                     tx_valid <= 0;
    26                                                           end
    27                                                           else if(rx_data[9:8] == 2'b01) begin 
    28              1                         96                     mem[wr_address] <= rx_data[7:0];
    29              1                         96                     tx_valid <= 0;
    30                                                           end
    31                                                           else if(rx_data[9:8] == 2'b10) begin 
    32              1                         73                     rd_address <= rx_data[7:0];
    33              1                         73                     tx_valid <= 0;
    34                                                           end
    35                                                           else begin 
    36              1                         36                     tx_data <= mem[rd_address];
    37              1                         36                     tx_valid <= 1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         76        76         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/GM_WRAPPER/RAM_instance --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                   rd_address[0-7]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 
                                   wr_address[0-7]           1           1                              100.00 

Total Node Count     =         38 
Toggled Node Count   =         38 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (76 of 76 bins)

=================================================================================
=== Instance: /WRAPPER_top/GM_WRAPPER/SLAVE_instance
=== Design Unit: work.SLAVE_golden_model
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        46        44         2    95.65%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_top/GM_WRAPPER/SLAVE_instance

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_golden_model.v
------------------------------------IF Branch------------------------------------
    19                                       795     Count coming in to IF
    19              1                         29         if(~rst_n) cs <= IDLE;
    20              1                        766         else cs <= ns;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    24                                      2235     Count coming in to CASE
    25              1                        394         IDLE: begin
    29              1                        307         CHK_CMD: begin
    39              1                        769         WRITE: begin
    43              1                        322         READ_ADD: begin
    47              1                        442         READ_DATA: begin
    51              1                          1         default: ns = IDLE;
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    26                                       394     Count coming in to IF
    26              1                        215             if(~SS_n) ns = CHK_CMD;
    27              1                        179             else ns = IDLE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    30                                       307     Count coming in to IF
    30              1                    ***0***             if(SS_n) ns = IDLE;
    31              1                        307             else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    32                                       307     Count coming in to IF
    32              1                        161                 if(~MOSI) ns = WRITE;
    33              1                        146                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    34                                       146     Count coming in to IF
    34              1                         36                     if(rx_type) ns = READ_DATA;
    35              1                        110                     else ns = READ_ADD;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    40                                       769     Count coming in to IF
    40              1                        106             if(SS_n) ns = IDLE;
    41              1                        663             else ns = WRITE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    44                                       322     Count coming in to IF
    44              1                         37             if(SS_n) ns = IDLE;
    45              1                        285             else ns = READ_ADD;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                       442     Count coming in to IF
    48              1                         33             if(SS_n) ns = IDLE;
    49              1                        409             else ns = READ_DATA;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    56                                      3001     Count coming in to IF
    56              1                         29         if(~rst_n) begin
    63              1                       2972         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    64                                      2972     Count coming in to CASE
    65              1                        199             IDLE: rx_valid <= 0;
    66              1                        197             CHK_CMD: cnt <= 0;
    67              1                       1341             WRITE: begin
    72              1                        469             READ_ADD: begin
    80              1                        766             READ_DATA: begin
                                         ***0***     All False Count
Branch totals: 5 hits of 6 branches = 83.33%

------------------------------------IF Branch------------------------------------
    69                                      1341     Count coming in to IF
    69              1                       1132                     if (cnt < 10) rx_data[9-cnt] <= MOSI;
                                             209     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    70                                      1341     Count coming in to IF
    70              1                        106                 if (cnt == 10) rx_valid <= 1;
                                            1235     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    74                                       469     Count coming in to IF
    74              1                        395                     if (cnt < 10) rx_data[9-cnt] <= MOSI;
                                              74     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                       469     Count coming in to IF
    75              1                         37                 if (cnt == 10) begin
                                             432     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    81                                       766     Count coming in to IF
    81              1                        432                 if(!tx_valid) begin
    90              1                        334                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    83                                       432     Count coming in to IF
    83              1                        396                     if (cnt < 10) rx_data[9-cnt] <= MOSI;
    84              1                         36                     else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                       432     Count coming in to IF
    87              1                         36                     if (cnt == 10) cnt <= 1;
                                             396     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    93                                       334     Count coming in to IF
    93              1                        268                     if (cnt >= 2 && cnt <= 9) MISO <= tx_data[9 - cnt];
    94              1                         66                     else begin
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       8         7         1    87.50%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_top/GM_WRAPPER/SLAVE_instance --

  File SPI_slave_golden_model.v
----------------Focused Condition View-------------------
Line       69 Item    1  (cnt < 10)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  (cnt < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cnt < 10)_0          -                             
  Row   2:          1  (cnt < 10)_1          -                             

----------------Focused Condition View-------------------
Line       70 Item    1  (cnt == 10)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (cnt == 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cnt == 10)_0         -                             
  Row   2:          1  (cnt == 10)_1         -                             

----------------Focused Condition View-------------------
Line       74 Item    1  (cnt < 10)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  (cnt < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cnt < 10)_0          -                             
  Row   2:          1  (cnt < 10)_1          -                             

----------------Focused Condition View-------------------
Line       75 Item    1  (cnt == 10)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (cnt == 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cnt == 10)_0         -                             
  Row   2:          1  (cnt == 10)_1         -                             

----------------Focused Condition View-------------------
Line       83 Item    1  (cnt < 10)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  (cnt < 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cnt < 10)_0          -                             
  Row   2:          1  (cnt < 10)_1          -                             

----------------Focused Condition View-------------------
Line       87 Item    1  (cnt == 10)
Condition totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (cnt == 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cnt == 10)_0         -                             
  Row   2:          1  (cnt == 10)_1         -                             

----------------Focused Condition View-------------------
Line       93 Item    1  ((cnt >= 2) && (cnt <= 9))
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  (cnt >= 2)         N  '_0' not hit             Hit '_0'
  (cnt <= 9)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cnt >= 2)_0          -                             
  Row   2:          1  (cnt >= 2)_1          (cnt <= 9)                    
  Row   3:          1  (cnt <= 9)_0          (cnt >= 2)                    
  Row   4:          1  (cnt <= 9)_1          (cnt >= 2)                    


Expression Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Expressions                      1         1         0   100.00%

================================Expression Details================================

Expression Coverage for instance /WRAPPER_top/GM_WRAPPER/SLAVE_instance --

  File SPI_slave_golden_model.v
----------------Focused Expression View-----------------
Line       88 Item    1  (cnt == 10)
Expression totals: 1 of 1 input term covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (cnt == 10)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cnt == 10)_0         -                             
  Row   2:          1  (cnt == 10)_1         -                             


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /WRAPPER_top/GM_WRAPPER/SLAVE_instance --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  25                IDLE                   0
  29             CHK_CMD                   1
  43            READ_ADD                   3
  47           READ_DATA                   4
  39               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                 205          
                 CHK_CMD                 198          
                READ_ADD                  84          
               READ_DATA                  72          
                   WRITE                 236          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  26                   0                 198          IDLE -> CHK_CMD               
  35                   1                  42          CHK_CMD -> READ_ADD           
  34                   2                  36          CHK_CMD -> READ_DATA          
  32                   3                 119          CHK_CMD -> WRITE              
  30                   4                   1          CHK_CMD -> IDLE               
  44                   5                  42          READ_ADD -> IDLE              
  48                   6                  36          READ_DATA -> IDLE             
  40                   7                 118          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      41        40         1    97.56%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_top/GM_WRAPPER/SLAVE_instance --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_golden_model.v
    1                                                module SLAVE_golden_model (
    2                                                    input clk, rst_n, SS_n, MOSI, tx_valid, 
    3                                                    input[7:0] tx_data,
    4                                                    output reg MISO, rx_valid,
    5                                                    output reg[9:0] rx_data
    6                                                );
    7                                                parameter IDLE = 3'b000;
    8                                                parameter CHK_CMD = 3'b001;
    9                                                parameter WRITE = 3'b010;
    10                                               parameter READ_ADD = 3'b011;
    11                                               parameter READ_DATA = 3'b100;
    12                                               
    13                                               // (* fsm_encoding = "gray" *) 
    14                                               reg[2:0] cs, ns; 
    15                                               reg rx_type;
    16                                               reg[4:0] cnt;
    17                                               
    18              1                        795     always @(posedge clk) begin
    19              1                         29         if(~rst_n) cs <= IDLE;
    20              1                        766         else cs <= ns;
    21                                               end
    22                                               
    23              1                       2235     always @(*) begin
    24                                                   case(cs) 
    25                                                   IDLE: begin
    26              1                        215             if(~SS_n) ns = CHK_CMD;
    27              1                        179             else ns = IDLE;
    28                                                   end
    29                                                   CHK_CMD: begin
    30              1                    ***0***             if(SS_n) ns = IDLE;
    31                                                       else begin
    32              1                        161                 if(~MOSI) ns = WRITE;
    33                                                           else begin
    34              1                         36                     if(rx_type) ns = READ_DATA;
    35              1                        110                     else ns = READ_ADD;
    36                                                           end
    37                                                       end
    38                                                   end
    39                                                   WRITE: begin
    40              1                        106             if(SS_n) ns = IDLE;
    41              1                        663             else ns = WRITE;
    42                                                   end
    43                                                   READ_ADD: begin
    44              1                         37             if(SS_n) ns = IDLE;
    45              1                        285             else ns = READ_ADD;
    46                                                   end
    47                                                   READ_DATA: begin
    48              1                         33             if(SS_n) ns = IDLE;
    49              1                        409             else ns = READ_DATA;
    50                                                   end
    51              1                          1         default: ns = IDLE;
    52                                                   endcase
    53                                               end
    54                                               
    55              1                       3001     always @(posedge clk) begin
    56                                                   if(~rst_n) begin
    57              1                         29             MISO <= 0;
    58              1                         29             rx_type <= 0;
    59              1                         29             rx_valid <= 0;
    60              1                         29             rx_data <= 0;
    61              1                         29             cnt <= 0;
    62                                                   end
    63                                                   else begin
    64                                                       case(cs)
    65              1                        199             IDLE: rx_valid <= 0;
    66              1                        197             CHK_CMD: cnt <= 0;
    67                                                       WRITE: begin
    68              1                       1341                 cnt <= cnt + 1;
    69              1                       1132                     if (cnt < 10) rx_data[9-cnt] <= MOSI;
    70              1                        106                 if (cnt == 10) rx_valid <= 1;
    71                                                       end
    72                                                       READ_ADD: begin
    73              1                        469                 cnt <= cnt + 1;
    74              1                        395                     if (cnt < 10) rx_data[9-cnt] <= MOSI;
    75                                                           if (cnt == 10) begin
    76              1                         37                     rx_valid <= 1;
    77              1                         37                     rx_type <= 1;
    78                                                           end
    79                                                       end
    80                                                       READ_DATA: begin
    81                                                           if(!tx_valid) begin
    82              1                        432                     cnt <= cnt + 1;
    83              1                        396                     if (cnt < 10) rx_data[9-cnt] <= MOSI;
    84                                                               else begin
    85              1                         36                         rx_type <= 0;
    86                                                               end
    87              1                         36                     if (cnt == 10) cnt <= 1;
    88              1                        432                     rx_valid <= (cnt == 10);
    89                                                           end
    90                                                           else begin
    91              1                        334                     rx_valid <= 0;
    92              1                        334                     cnt <= cnt + 1;
    93              1                        268                     if (cnt >= 2 && cnt <= 9) MISO <= tx_data[9 - cnt];
    94                                                               else begin
    95              1                         66                         rx_type <= 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         74        72         2    97.29%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/GM_WRAPPER/SLAVE_instance --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                          cnt[0-3]           1           1                              100.00 
                                            cnt[4]           0           0                                0.00 
                                           cs[0-2]           1           1                              100.00 
                                           ns[0-2]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                           rx_type           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         37 
Toggled Node Count   =         36 
Untoggled Node Count =          1 

Toggle Coverage      =      97.29% (72 of 74 bins)

=================================================================================
=== Instance: /WRAPPER_top/GM_WRAPPER
=== Design Unit: work.WRAPPER_ref
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        50         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top/GM_WRAPPER --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                  rx_data_din[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                 tx_data_dout[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         25 
Toggled Node Count   =         25 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (50 of 50 bins)

=================================================================================
=== Instance: /WRAPPER_top
=== Design Unit: work.WRAPPER_top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        27         0   100.00%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_top.sv
    4                                                module WRAPPER_top;
    5                                                    logic clk = 0;
    6                                                    initial begin
    7               1                          1             $readmemb("mem.dat", DUT_WRAPPER.RAM_instance.MEM);
    8               1                          1             $readmemb("mem.dat", GM_WRAPPER.RAM_instance.mem);
    9                                                        
    10              1                          1             forever #1 clk = ~clk;
    10              2                       6007     
    10              3                       6006     
    11                                                   end
    12                                               
    13                                                   WRAPPER_IF wrapper_if(clk);
    14                                                   RAM_IF ram_if(clk);
    15                                                   SPI_slave_if slave_if(clk);
    16                                               
    17                                                   WRAPPER DUT_WRAPPER (
    18                                                       .clk(wrapper_if.clk),
    19                                                       .rst_n(wrapper_if.rst_n),
    20                                                       .MOSI(wrapper_if.MOSI),
    21                                                       .SS_n(wrapper_if.SS_n),
    22                                                       .MISO(wrapper_if.MISO)
    23                                                   );
    24                                               
    25                                                   WRAPPER_ref GM_WRAPPER(
    26                                                       .clk(wrapper_if.clk),
    27                                                       .rst_n(wrapper_if.rst_n),
    28                                                       .MOSI(wrapper_if.MOSI),
    29                                                       .SS_n(wrapper_if.SS_n),
    30                                                       .MISO(wrapper_if.MISO_ref)
    31                                                   );
    32                                               
    33                                               //RAM Inputs
    34              1                         59         assign ram_if.rst_n = DUT_WRAPPER.rst_n;
    35              1                        360         assign ram_if.rx_valid = DUT_WRAPPER.rx_valid;
    36              1                        952         assign ram_if.din = DUT_WRAPPER.rx_data_din;
    37              1                         48         assign ram_if.dout = DUT_WRAPPER.tx_data_dout;
    38              1                         74         assign ram_if.tx_valid = DUT_WRAPPER.tx_valid;
    39              1                         48         assign ram_if.dout_ref = GM_WRAPPER.tx_data_dout;
    40              1                         74         assign ram_if.tx_valid_ref = GM_WRAPPER.tx_valid;
    41                                               
    42                                               
    43                                               //Slave Inputs
    44              1                         59         assign slave_if.rst_n = DUT_WRAPPER.rst_n;
    45              1                        360         assign slave_if.SS_n = DUT_WRAPPER.SS_n;
    46              1                         74         assign slave_if.tx_valid = DUT_WRAPPER.tx_valid;
    47              1                         48         assign slave_if.tx_data = DUT_WRAPPER.tx_data_dout;
    48              1                       1393         assign slave_if.MOSI = DUT_WRAPPER.MOSI;
    49              1                        952         assign slave_if.rx_data = DUT_WRAPPER.rx_data_din;
    50              1                        952         assign slave_if.rx_data_ref = GM_WRAPPER.rx_data_din;
    51              1                        124         assign slave_if.MISO = DUT_WRAPPER.MISO;
    52              1                        124         assign slave_if.MISO_ref = GM_WRAPPER.MISO;
    53              1                        360         assign slave_if.rx_valid = DUT_WRAPPER.rx_valid;
    54              1                        360         assign slave_if.rx_valid_ref = GM_WRAPPER.rx_valid;
    55                                               
    56                                               
    57                                                   bind RAM RAM_sva RAM_sva_inst(
    58                                                       .clk(ram_if.clk),
    59                                                       .rst_n(ram_if.rst_n),
    60                                                       .rx_valid(ram_if.rx_valid),
    61                                                       .din(ram_if.din),
    62                                                       .tx_valid(ram_if.tx_valid),
    63                                                       .dout(ram_if.dout)
    64                                                   );
    65                                               
    66                                                   bind WRAPPER WRAPPER_sva WRAPPER_sva_inst(
    67                                                       .clk(wrapper_if.clk),
    68                                                       .rst_n(wrapper_if.rst_n),
    69                                                       .MOSI(wrapper_if.MOSI),
    70                                                       .SS_n(wrapper_if.SS_n),
    71                                                       .MISO(wrapper_if.MISO),
    72                                                       .rx_data_din(WRAPPER.rx_data_din),
    73                                                       .rx_valid(WRAPPER.rx_valid),
    74                                                       .tx_valid(WRAPPER.tx_valid),
    75                                                       .operation(WRAPPER.SLAVE_instance.cs)
    76                                                   );
    77                                               
    78                                                   initial begin
    79              1                          1             uvm_config_db #(virtual WRAPPER_IF)::set(null,"uvm_test_top","WRAPPER_IF", wrapper_if);
    80              1                          1             uvm_config_db #(virtual SPI_slave_if)::set(null,"uvm_test_top","SLAVE_IF", slave_if);
    81              1                          1             uvm_config_db #(virtual RAM_IF)::set(null,"uvm_test_top","RAM_IF", ram_if);
    82              1                          1             run_test("WRAPPER_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /WRAPPER_top --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /shared_pkg
=== Design Unit: work.shared_pkg
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          4         4         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /shared_pkg --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                       is_readOnly           1           1                              100.00 
                                        start_read           1           1                              100.00 

Total Node Count     =          2 
Toggled Node Count   =          2 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (4 of 4 bins)

=================================================================================
=== Instance: /RAM_seq_item_pkg
=== Design Unit: work.RAM_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_seq_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(RAM_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(RAM_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(RAM_seq_item)
    6               4                    ***0***             `uvm_object_utils(RAM_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(RAM_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(RAM_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /RAM_seq_item_pkg --

  File RAM_seq_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16         3        13    18.75%

================================Statement Details================================

Statement Coverage for instance /RAM_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_seq_item.sv
    1                                                package RAM_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import shared_pkg::*;
    5                                                    class RAM_seq_item extends uvm_sequence_item;
    6               1                    ***0***             `uvm_object_utils(RAM_seq_item)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                    // Signals Delarations
    8                                                        rand logic      [9:0] din;
    9                                                        rand logic rst_n, rx_valid;
    10                                               
    11                                                       logic [7:0] dout;
    12                                                       logic       tx_valid;
    13                                                       logic [7:0] dout_ref;
    14                                                       logic       tx_valid_ref;
    15                                                       
    16              1                       3004             op_e wr_op[] = '{WRITE_ADDR, WRITE_DATA};
    17              1                       3004             op_e rd_op[] = '{READ_ADDR, READ_DATA};
    18                                               
    19                                                       bit wr_addr, wr_data, rd_addr, rd_data;
    20                                               
    21                                                       rand op_e op_rd_data, op_wr_data;
    22                                               
    23                                                       static op_e last_op;
    24                                                   // Functions 
    25                                                       function new(string name = "RAM_seq_item");
    26              1                       3004                 super.new(name);
    27                                                       endfunction
    28                                               
    29                                                       function string convert2string();
    30              1                    ***0***                 return $sformatf("%s - reset = %b, rx_valid = %b, din = %h ---- tx_valid = %b, dout = %h", super.convert2string, rst_n, rx_valid, din, tx_valid, dout);
    31                                                       endfunction
    32                                                       function string convert2string_stimulus();
    33              1                    ***0***                 return $sformatf("%s - reset = %b, rx_valid = %b, din = %h", super.convert2string, rst_n, rx_valid, din);
    34                                                       endfunction
    35                                                       function void post_randomize();
    36              1                    ***0***                 last_op = op_e'{din[9:8]};


=================================================================================
=== Instance: /RAM_coverage_pkg
=== Design Unit: work.RAM_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          5        na        na        na
            Covergroup Bins         16        16         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /RAM_coverage_pkg/RAM_coverage/RAM_CVG          100.00%        100          -    Covered              
    covered/total bins:                                    16         16          -                      
    missing/total bins:                                     0         16          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint operation_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
    Cross OP_rxValid_cross                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross Read_OP_cross                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/RAM_coverage_pkg::RAM_coverage::RAM_CVG  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    16         16          -                      
    missing/total bins:                                     0         16          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bin_rxValid_High                              319          1          -    Covered              
        bin Bin_rxValid_Low                              2684          1          -    Covered              
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bin_txValid_High                              755          1          -    Covered              
        bin Bin_txValid_Low                              2248          1          -    Covered              
    Coverpoint operation_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bin_Write_Addr                                922          1          -    Covered              
        bin Bin_Write_Data                                711          1          -    Covered              
        bin Bin_Read_Addr                                 815          1          -    Covered              
        bin Bin_Read_Data                                 555          1          -    Covered              
        bin Bin_Write_AddrToData                           35          1          -    Covered              
        bin Bin_Read_AddrToData                            36          1          -    Covered              
        bin Bin_Trans                                     164          1          -    Covered              
    Cross OP_rxValid_cross                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin Bin_Write_Addr_rxValidHigh                110          1          -    Covered              
            bin Bin_Write_Data_rxValidHigh                 99          1          -    Covered              
            bin Bin_Read_Addr_rxValidHigh                  74          1          -    Covered              
            bin Bin_Read_Data_rxValidHigh                  36          1          -    Covered              
    Cross Read_OP_cross                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin Bin_out                                   228          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /RAM_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_coverage.sv
    1                                                package RAM_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                
    5                                                    import RAM_seq_item_pkg::*;
    6                                                    import shared_pkg::*;
    7                                                    class RAM_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(RAM_coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                        
    10                                                       uvm_analysis_export #(RAM_seq_item) cvg_axp;
    11                                                       uvm_tlm_analysis_fifo #(RAM_seq_item) cvg_fifo;
    12                                               
    13                                                       RAM_seq_item cvg_seq_item;
    14                                               //RAM_1 // RAM_2, RAM_3 //RAM_4, RAM_5 //RAM_6, RAM_7, RAM_8, RAM_9
    15                                                       covergroup RAM_CVG;
    16                                                           rx_valid_cp: coverpoint cvg_seq_item.rx_valid{
    17                                                               bins Bin_rxValid_High = {1'b1};
    18                                                               bins Bin_rxValid_Low = {1'b0};
    19                                                           }
    20                                                           tx_valid_cp: coverpoint cvg_seq_item.tx_valid{
    21                                                               bins Bin_txValid_High = {1'b1};
    22                                                               bins Bin_txValid_Low = {1'b0};
    23                                                           }
    24                                                          operation_cp: coverpoint cvg_seq_item.din[9:8]{
    25                                                               bins Bin_Write_Addr = {WRITE_ADDR};
    26                                                               bins Bin_Write_Data = {WRITE_DATA};
    27                                                               bins Bin_Read_Addr = {READ_ADDR};
    28                                                               bins Bin_Read_Data = {READ_DATA};
    29                                                               bins Bin_Write_AddrToData = (WRITE_ADDR=>WRITE_DATA);
    30                                                               bins Bin_Read_AddrToData = (READ_ADDR=>READ_DATA);
    31                                                               bins Bin_Trans = (0 => 1), (1 => 3), (1 => 0), (0 => 2),
    32                                                                                (2 => 3), (2 => 0), (3 => 1), (3 => 2);
    33                                                          }
    34                                               
    35                                                          OP_rxValid_cross: cross operation_cp, rx_valid_cp {
    36                                                               option.cross_auto_bin_max = 0;
    37                                                               bins Bin_Write_Addr_rxValidHigh  = binsof(operation_cp.Bin_Write_Addr) && binsof(rx_valid_cp.Bin_rxValid_High);
    38                                                               bins Bin_Write_Data_rxValidHigh  = binsof(operation_cp.Bin_Write_Data) && binsof(rx_valid_cp.Bin_rxValid_High);
    39                                                               bins Bin_Read_Addr_rxValidHigh   = binsof(operation_cp.Bin_Read_Addr) && binsof(rx_valid_cp.Bin_rxValid_High);
    40                                                               bins Bin_Read_Data_rxValidHigh   = binsof(operation_cp.Bin_Read_Data) && binsof(rx_valid_cp.Bin_rxValid_High);
    41                                                           }
    42                                                          Read_OP_cross: cross operation_cp,  tx_valid_cp {
    43                                                               option.cross_auto_bin_max = 0;
    44                                                               bins Bin_out = binsof(operation_cp) intersect {READ_DATA} && binsof(tx_valid_cp) intersect {1};
    45                                                          }
    46                                                       endgroup
    47                                                       function new (string name = "RAM_coverage", uvm_component parent = null);
    48              1                          1                 super.new(name, parent);
    49              1                          1                 RAM_CVG = new;
    50                                                       endfunction
    51                                               
    52                                                       function void build_phase (uvm_phase phase);
    53              1                          1                 super.build_phase(phase);
    54                                               
    55              1                          1                 cvg_axp = new ("cvg_axp", this);
    56              1                          1                 cvg_fifo = new ("cvg_fifo", this);
    57                                                       endfunction
    58                                               
    59                                                       function void connect_phase(uvm_phase phase);
    60              1                          1                 super.connect_phase(phase);
    61              1                          1                 cvg_axp.connect(cvg_fifo.analysis_export);
    62                                                       endfunction
    63                                               
    64                                                       task run_phase(uvm_phase phase);
    65              1                          1                 super.run_phase(phase);
    66              1                          1                 forever begin
    67              1                       3004                     cvg_fifo.get(cvg_seq_item);
    68              1                       3003                     RAM_CVG.sample();


=================================================================================
=== Instance: /RAM_scoreboard_pkg
=== Design Unit: work.RAM_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /RAM_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_scoreboard.sv
------------------------------------IF Branch------------------------------------
    43                                      3003     Count coming in to IF
    43              1                    ***0***                     if (
    51              1                       3003                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              1                    ***0***                         `uvm_error("run_phase", $sformatf("Comparison Failed - Transaction Received DUT : %s, Ref Model : tx_valid = %b, dout = %h", sb_seq_item.convert2string, 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    53                                      3003     Count coming in to IF
    53              1                    ***0***                         `uvm_info("run_phase", $sformatf("Correct RAM Comparison: %s", sb_seq_item.convert2string),UVM_HIGH);
                                            3003     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    60                                         1     Count coming in to IF
    60              1                          1                 `uvm_info("report_phase", $sformatf("Correct Tests = %d, Error Tests = %d", correct_cnt, error_cnt),UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /RAM_scoreboard_pkg --

  File RAM_scoreboard.sv
----------------Focused Condition View-------------------
Line       44 Item    1  ((this.sb_seq_item.tx_valid_ref != this.sb_seq_item.tx_valid) || (this.sb_seq_item.dout_ref != this.sb_seq_item.dout))
Condition totals: 0 of 2 input terms covered = 0.00%

                                                    Input Term   Covered  Reason for no coverage   Hint
                                                   -----------  --------  -----------------------  --------------
  (this.sb_seq_item.tx_valid_ref != this.sb_seq_item.tx_valid)         N  '_1' not hit             Hit '_1'
          (this.sb_seq_item.dout_ref != this.sb_seq_item.dout)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                      Non-masking condition(s)      
 ---------  ---------  --------------------                                            -------------------------     
  Row   1:          1  (this.sb_seq_item.tx_valid_ref != this.sb_seq_item.tx_valid)_0  ~(this.sb_seq_item.dout_ref != this.sb_seq_item.dout)
  Row   2:    ***0***  (this.sb_seq_item.tx_valid_ref != this.sb_seq_item.tx_valid)_1  -                             
  Row   3:          1  (this.sb_seq_item.dout_ref != this.sb_seq_item.dout)_0          ~(this.sb_seq_item.tx_valid_ref != this.sb_seq_item.tx_valid)
  Row   4:    ***0***  (this.sb_seq_item.dout_ref != this.sb_seq_item.dout)_1          ~(this.sb_seq_item.tx_valid_ref != this.sb_seq_item.tx_valid)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        15         5    75.00%

================================Statement Details================================

Statement Coverage for instance /RAM_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_scoreboard.sv
    1                                                package RAM_scoreboard_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import RAM_seq_item_pkg::*;
    5                                                    class RAM_scoreboard extends uvm_scoreboard;
    6               1                    ***0***             `uvm_component_utils(RAM_scoreboard)
    6               2                    ***0***     
    6               3                          2     
    7                                                
    8                                                        logic [7:0] dout_ref;
    9                                                        logic       tx_valid_ref;   
    10                                               
    11                                                       logic [7:0] Rd_Addr, Wr_Addr;
    12                                               
    13                                                       logic [7:0] MEM_ref [logic[7:0]];
    14                                               
    15                                                       uvm_analysis_export #(RAM_seq_item) sb_axp;
    16                                                       uvm_tlm_analysis_fifo #(RAM_seq_item) sb_fifo;
    17                                               
    18                                                       RAM_seq_item sb_seq_item;
    19                                               
    20              1                          1             int error_cnt = 0, correct_cnt = 0;
    20              2                          1     
    21                                               
    22                                                       function new (string name = "RAM_scoreboard", uvm_component parent = null);
    23              1                          1                 super.new(name, parent);
    24                                                       endfunction
    25                                               
    26                                                       function void build_phase(uvm_phase phase);
    27              1                          1                 super.build_phase(phase);
    28              1                          1                 sb_axp = new("sb_axp", this);
    29              1                          1                 sb_fifo = new("sb_fifo", this);
    30                                                       
    31                                                       endfunction
    32                                               
    33                                                       function void connect_phase(uvm_phase phase);
    34              1                          1                 super.connect_phase(phase);
    35              1                          1                 sb_axp.connect(sb_fifo.analysis_export);
    36                                                       endfunction
    37                                               
    38                                                       task run_phase(uvm_phase phase);
    39              1                          1                 super.run_phase(phase);
    40              1                          1                 forever begin
    41              1                       3004                     sb_fifo.get(sb_seq_item);
    42                                                               // ref_model(sb_seq_item);
    43                                                               if (
    44                                                                   sb_seq_item.tx_valid_ref != sb_seq_item.tx_valid ||
    45                                                                   sb_seq_item.dout_ref != sb_seq_item.dout
    46                                                               ) begin
    47              1                    ***0***                         error_cnt++;
    48              1                    ***0***                         `uvm_error("run_phase", $sformatf("Comparison Failed - Transaction Received DUT : %s, Ref Model : tx_valid = %b, dout = %h", sb_seq_item.convert2string, 
    49                                                                                                                       sb_seq_item.tx_valid_ref, sb_seq_item.dout_ref));
    50                                                               end
    51                                                               else begin
    52              1                       3003                         correct_cnt++;
    53              1                    ***0***                         `uvm_info("run_phase", $sformatf("Correct RAM Comparison: %s", sb_seq_item.convert2string),UVM_HIGH);
    54                                                               end
    55                                                           end
    56                                                       endtask
    57                                               
    58                                                       function void report_phase (uvm_phase phase);
    59              1                          1                 super.report_phase(phase);
    60              1                          1                 `uvm_info("report_phase", $sformatf("Correct Tests = %d, Error Tests = %d", correct_cnt, error_cnt),UVM_MEDIUM)


=================================================================================
=== Instance: /RAM_config_pkg
=== Design Unit: work.RAM_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_config.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***             `uvm_object_utils(RAM_config) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***             `uvm_object_utils(RAM_config) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***             `uvm_object_utils(RAM_config) 
    5               4                    ***0***             `uvm_object_utils(RAM_config) 
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***             `uvm_object_utils(RAM_config) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***             `uvm_object_utils(RAM_config) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /RAM_config_pkg --

  File RAM_config.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /RAM_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_config.sv
    1                                                package RAM_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    class RAM_config extends uvm_object;
    5               1                    ***0***             `uvm_object_utils(RAM_config) 
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                
    7                                                        virtual RAM_IF ram_if;
    8                                                        uvm_active_passive_enum is_active;
    9                                                
    10                                                       function new(string name = "RAM_config");
    11              1                          1                 super.new(name);


=================================================================================
=== Instance: /RAM_driver_pkg
=== Design Unit: work.RAM_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /RAM_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_driver.sv
------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***                     `uvm_info("run_phase", dvr_seq_item.convert2string_stimulus, UVM_HIGH);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14         0        14     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_driver.sv
    1                                                package RAM_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import RAM_seq_item_pkg::*;
    5                                                    class RAM_driver extends uvm_driver #(RAM_seq_item);
    6               1                    ***0***             `uvm_component_utils(RAM_driver)
    6               2                    ***0***     
    6               3                    ***0***     
    7                                                
    8                                                        RAM_seq_item dvr_seq_item;
    9                                                        virtual RAM_IF ram_dvr_if;
    10                                                   
    11                                                       function new (string name = "RAM_driver", uvm_component parent = null);
    12              1                    ***0***                 super.new(name, parent);
    13                                                       endfunction
    14                                               
    15                                                       task run_phase (uvm_phase phase);
    16              1                    ***0***                 super.run_phase(phase);
    17              1                    ***0***                 forever begin
    18              1                    ***0***                     dvr_seq_item = RAM_seq_item::type_id::create("dvr_seq_item");
    19              1                    ***0***                     seq_item_port.get_next_item(dvr_seq_item);
    20              1                    ***0***                     ram_dvr_if.rst_n = dvr_seq_item.rst_n;
    21              1                    ***0***                     ram_dvr_if.rx_valid = dvr_seq_item.rx_valid;
    22              1                    ***0***                     ram_dvr_if.din = dvr_seq_item.din;
    23              1                    ***0***                     repeat(1)@(negedge ram_dvr_if.clk);
    24              1                    ***0***                     seq_item_port.item_done();
    25              1                    ***0***                     `uvm_info("run_phase", dvr_seq_item.convert2string_stimulus, UVM_HIGH);


=================================================================================
=== Instance: /RAM_monitor_pkg
=== Design Unit: work.RAM_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /RAM_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_monitor.sv
------------------------------------IF Branch------------------------------------
    35                                      3003     Count coming in to IF
    35              1                    ***0***                     `uvm_info("run_phase", mon_seq_item.convert2string, UVM_HIGH);
                                            3003     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        16         3    84.21%

================================Statement Details================================

Statement Coverage for instance /RAM_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_monitor.sv
    1                                                package RAM_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import RAM_seq_item_pkg::*;
    5                                                    class RAM_monitor extends uvm_monitor;
    6               1                    ***0***             `uvm_component_utils(RAM_monitor)
    6               2                    ***0***     
    6               3                          2     
    7                                                
    8                                                        virtual RAM_IF ram_mon_if;
    9                                                        RAM_seq_item mon_seq_item;
    10                                               
    11                                                       uvm_analysis_port #(RAM_seq_item) mon_ap;
    12                                               
    13                                                       function new (string name = "RAM_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction
    16                                               
    17                                                       function void build_phase (uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 mon_ap = new("mon_ap", this);
    20                                                       endfunction
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                       3004                     mon_seq_item = RAM_seq_item::type_id::create("mon_seq_item");
    26              1                       3004                     repeat(1)@(negedge ram_mon_if.clk);
    27              1                       3003                     mon_seq_item.rst_n = ram_mon_if.rst_n;
    28              1                       3003                     mon_seq_item.rx_valid = ram_mon_if.rx_valid;
    29              1                       3003                     mon_seq_item.din = ram_mon_if.din;
    30              1                       3003                     mon_seq_item.dout = ram_mon_if.dout;
    31              1                       3003                     mon_seq_item.tx_valid = ram_mon_if.tx_valid;
    32              1                       3003                     mon_seq_item.dout_ref = ram_mon_if.dout_ref;
    33              1                       3003                     mon_seq_item.tx_valid_ref = ram_mon_if.tx_valid_ref;
    34              1                       3003                     mon_ap.write(mon_seq_item);
    35              1                    ***0***                     `uvm_info("run_phase", mon_seq_item.convert2string, UVM_HIGH);


=================================================================================
=== Instance: /RAM_sequencer_pkg
=== Design Unit: work.RAM_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /RAM_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_sequencer.sv
    1                                                package RAM_sequencer_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import RAM_seq_item_pkg::*;
    5                                                    class RAM_sequencer extends uvm_sequencer #(RAM_seq_item);
    6               1                    ***0***             `uvm_component_utils(RAM_sequencer)
    6               2                    ***0***     
    6               3                    ***0***     
    7                                                
    8                                                        function new (string name = "RAM_sequencer", uvm_component parent = null);
    9               1                    ***0***                 super.new(name, parent);


=================================================================================
=== Instance: /RAM_agent_pkg
=== Design Unit: work.RAM_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /RAM_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_agent.sv
------------------------------------IF Branch------------------------------------
    27                                         1     Count coming in to IF
    27              1                    ***0***                 if (!uvm_config_db #(RAM_config)::get(this,"","CFG_RAM",ram_cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              1                    ***0***                     `uvm_fatal("build_phase", "Error - Agent cannot retrieve the config object");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    32                                         1     Count coming in to IF
    32              1                    ***0***                 if (ram_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    42                                         1     Count coming in to IF
    42              1                    ***0***                 if(ram_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         8         7    53.33%

================================Statement Details================================

Statement Coverage for instance /RAM_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_agent.sv
    1                                                package RAM_agent_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import RAM_sequencer_pkg::*;
    5                                                    import RAM_monitor_pkg::*;
    6                                                    import RAM_driver_pkg::*;
    7                                                    import RAM_seq_item_pkg::*;
    8                                                    import RAM_config_pkg::*;
    9                                                    class RAM_agent extends uvm_agent;
    10              1                    ***0***             `uvm_component_utils(RAM_agent)
    10              2                    ***0***     
    10              3                          2     
    11                                               
    12                                                       RAM_config ram_cfg;
    13                                               
    14                                                       RAM_sequencer ram_sqr;
    15                                                       RAM_monitor ram_mon;
    16                                                       RAM_driver ram_dvr;
    17                                               
    18                                                       uvm_analysis_port #(RAM_seq_item) agt_ap;
    19                                               
    20                                                       function new (string name = "RAM_agent", uvm_component parent = null);
    21              1                          1                 super.new(name, parent);
    22                                                       endfunction
    23                                               
    24                                                       function void build_phase(uvm_phase phase);
    25              1                          1                 super.build_phase(phase);
    26                                               
    27                                                           if (!uvm_config_db #(RAM_config)::get(this,"","CFG_RAM",ram_cfg))
    28              1                    ***0***                     `uvm_fatal("build_phase", "Error - Agent cannot retrieve the config object");
    29                                               
    30              1                          1                 ram_mon = RAM_monitor::type_id::create("ram_mon", this);
    31                                               
    32                                                           if (ram_cfg.is_active == UVM_ACTIVE) begin
    33              1                    ***0***                     ram_dvr = RAM_driver::type_id::create("ram_dvr", this);
    34              1                    ***0***                     ram_sqr = RAM_sequencer::type_id::create("ram_sqr", this);
    35                                                           end
    36                                               
    37              1                          1                 agt_ap = new ("agt_ap", this);
    38                                                       endfunction
    39                                               
    40                                                       function void connect_phase (uvm_phase phase);
    41              1                          1                 super.connect_phase(phase);
    42                                                           if(ram_cfg.is_active == UVM_ACTIVE) begin
    43              1                    ***0***                     ram_dvr.ram_dvr_if = ram_cfg.ram_if;
    44              1                    ***0***                     ram_dvr.seq_item_port.connect(ram_sqr.seq_item_export);
    45                                                           end
    46              1                          1                 ram_mon.ram_mon_if = ram_cfg.ram_if;
    47              1                          1                 ram_mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /RAM_env_pkg
=== Design Unit: work.RAM_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /RAM_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File RAM_env.sv
    1                                                package RAM_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import RAM_agent_pkg::*;
    5                                                    import RAM_scoreboard_pkg::*;
    6                                                    import RAM_coverage_pkg::*;
    7                                                    class RAM_env extends uvm_env;
    8               1                    ***0***             `uvm_component_utils(RAM_env)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       RAM_agent ram_agt;
    11                                                       RAM_scoreboard ram_sb;
    12                                                       RAM_coverage ram_cvg;
    13                                               
    14                                                       function new (string name = "RAM_env", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 ram_agt = RAM_agent::type_id::create("ram_agt", this);
    21              1                          1                 ram_sb= RAM_scoreboard::type_id::create("ram_sb", this);
    22              1                          1                 ram_cvg = RAM_coverage::type_id::create("ram_cvg", this);
    23                                                       endfunction
    24                                               
    25                                                       function void connect_phase(uvm_phase phase);
    26              1                          1                 super.connect_phase(phase);
    27              1                          1                 ram_agt.agt_ap.connect(ram_sb.sb_axp);
    28              1                          1                 ram_agt.agt_ap.connect(ram_cvg.cvg_axp);


=================================================================================
=== Instance: /SPI_slave_config_pkg
=== Design Unit: work.SPI_slave_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_config.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(SPI_slave_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(SPI_slave_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(SPI_slave_config);
    6               4                    ***0***         `uvm_object_utils(SPI_slave_config);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(SPI_slave_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(SPI_slave_config);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_slave_config_pkg --

  File SPI_slave_config.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_config.sv
    1                                                package SPI_slave_config_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                
    5                                                class SPI_slave_config extends uvm_object;
    6               1                    ***0***         `uvm_object_utils(SPI_slave_config);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                
    8                                                    virtual SPI_slave_if slave_if;
    9                                                    uvm_active_passive_enum is_active;
    10                                               
    11                                                   function new(string name = "SPI_slave_config");
    12              1                          1             super.new(name);


=================================================================================
=== Instance: /SPI_slave_seq_item_pkg
=== Design Unit: work.SPI_slave_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        19         0        19     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_seq_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***         `uvm_object_utils(SPI_slave_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***         `uvm_object_utils(SPI_slave_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***         `uvm_object_utils(SPI_slave_seq_item);
    6               4                    ***0***         `uvm_object_utils(SPI_slave_seq_item);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***         `uvm_object_utils(SPI_slave_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***         `uvm_object_utils(SPI_slave_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    66                                   ***0***     Count coming in to IF
    66              1                    ***0***             if(count==0) MOSI_array.rand_mode(1);
    67              1                    ***0***     		else MOSI_array.rand_mode(0);     
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69              1                    ***0***             if(MOSI_array[10:8] == 3'b111 && count == 12) tx_data.rand_mode(1);
    70              1                    ***0***             else tx_data.rand_mode(0);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    75                                   ***0***     Count coming in to IF
    75              1                    ***0***             if(SS_n || !rst_n) count = 0;
    76              1                    ***0***             else count++;
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    77                                   ***0***     Count coming in to IF
    77              1                    ***0***             if(!rst_n) state = 0;
    78              1                    ***0***             else if(count == 0) state++;
                                         ***0***     All False Count
Branch totals: 0 hits of 3 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       8         0         8     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_slave_seq_item_pkg --

  File SPI_slave_seq_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    1  (this.count == 0)
Condition totals: 0 of 1 input term covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.count == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (this.count == 0)_0   -                             
  Row   2:    ***0***  (this.count == 0)_1   -                             

----------------Focused Condition View-------------------
Line       69 Item    1  ((this.MOSI_array[10:8] == 7) && (this.count == 12))
Condition totals: 0 of 2 input terms covered = 0.00%

                    Input Term   Covered  Reason for no coverage   Hint
                   -----------  --------  -----------------------  --------------
  (this.MOSI_array[10:8] == 7)         N  No hits                  Hit '_0' and '_1'
            (this.count == 12)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                      Non-masking condition(s)      
 ---------  ---------  --------------------            -------------------------     
  Row   1:    ***0***  (this.MOSI_array[10:8] == 7)_0  -                             
  Row   2:    ***0***  (this.MOSI_array[10:8] == 7)_1  (this.count == 12)            
  Row   3:    ***0***  (this.count == 12)_0            (this.MOSI_array[10:8] == 7)  
  Row   4:    ***0***  (this.count == 12)_1            (this.MOSI_array[10:8] == 7)  

----------------Focused Condition View-------------------
Line       75 Item    1  (this.SS_n || ~this.rst_n)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   this.SS_n         N  No hits                  Hit '_0' and '_1'
  this.rst_n         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  this.SS_n_0           this.rst_n                    
  Row   2:    ***0***  this.SS_n_1           -                             
  Row   3:    ***0***  this.rst_n_0          ~this.SS_n                    
  Row   4:    ***0***  this.rst_n_1          ~this.SS_n                    

----------------Focused Condition View-------------------
Line       78 Item    1  (this.count == 0)
Condition totals: 0 of 1 input term covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.count == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (this.count == 0)_0   -                             
  Row   2:    ***0***  (this.count == 0)_1   -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21         1        20     4.76%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_seq_item.sv
    1                                                package SPI_slave_seq_item_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                
    5                                                class SPI_slave_seq_item extends uvm_sequence_item;
    6               1                    ***0***         `uvm_object_utils(SPI_slave_seq_item);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                    rand logic rst_n, MOSI, SS_n, tx_valid;
    8                                                    rand logic [7:0] tx_data;
    9                                                    logic [9:0] rx_data, rx_data_ref;
    10                                                   logic rx_valid, rx_valid_ref, MISO, MISO_ref; 
    11                                               
    12                                                   rand bit [10:0] MOSI_array;
    13                                                   static bit [1:0] state = 2'b00;
    14                                                   int count;
    15                                               
    16                                                   function new(string name = "SPI_slave_seq_item");
    17              1                       3004             super.new(name);
    18                                                   endfunction
    19                                               
    20                                                   function string convert2string();
    21              1                    ***0***             return $sformatf("%s rst_n = 0b%0b , MOSI = 0b%0b , SS_n = 0b%0b , tx_valid = 0b%0b , MISO = 0b%0b , tx_data = 0x%02h , rx_valid = 0b%0b , rx_data = 0x%03h",
    22                                                           super.convert2string(), rst_n, MOSI, SS_n, tx_valid, tx_data, MISO, rx_valid, rx_data);
    23                                                   endfunction
    24                                               
    25                                                   function string convert2string_stimulus();
    26              1                    ***0***             return $sformatf("%s rst_n = 0b%0b , MOSI = 0b%0b , SS_n = 0b%0b , tx_valid = 0b%0b , tx_data = 0x%02h",
    27                                                           super.convert2string(), rst_n, MOSI, SS_n, tx_valid, tx_data);
    28                                                   endfunction
    29                                               
    30                                                   // SLAVE_1
    31                                                   constraint rst_n_const{
    32                                                       rst_n dist {0:/1, 1:/99};
    33                                                   }
    34                                               
    35                                                   // SLAVE_2
    36                                                   constraint SS_n_const{
    37                                                       if(MOSI_array[10:8] == 3'b111){
    38                                                           if(count == 23) SS_n == 1;
    39                                                           else SS_n == 0;
    40                                                       }
    41                                                       else{
    42                                                           if(count == 13) SS_n == 1;
    43                                                           else SS_n == 0;
    44                                                       }
    45                                                   }
    46                                               
    47                                                   // SLAVE_3
    48                                                   constraint MOSI_array_const{
    49                                                       MOSI_array[10] == state[1];
    50                                                       MOSI_array[9:8] == state;
    51                                                   }
    52                                               
    53                                                   // SLAVE_4
    54                                                   constraint MOSI_const{
    55                                                      if (count > 0 && count < 12) MOSI == MOSI_array[11 - count];
    56                                                   }
    57                                               
    58                                                   // SLAVE_5
    59                                                   constraint tx_valid_const{
    60                                                       if(MOSI_array[10:8] == 3'b111 && count > 13 && count < 24) tx_valid == 1;
    61                                                       else tx_valid == 0;
    62                                                   }
    63                                               
    64                                               
    65                                                   function void pre_randomize();
    66              1                    ***0***             if(count==0) MOSI_array.rand_mode(1);
    67              1                    ***0***     		else MOSI_array.rand_mode(0);     
    68                                               
    69              1                    ***0***             if(MOSI_array[10:8] == 3'b111 && count == 12) tx_data.rand_mode(1);
    70              1                    ***0***             else tx_data.rand_mode(0);
    71                                               
    72                                                   endfunction
    73                                               
    74                                                   function void post_randomize();
    75              1                    ***0***             if(SS_n || !rst_n) count = 0;
    76              1                    ***0***             else count++;
    77              1                    ***0***             if(!rst_n) state = 0;
    78              1                    ***0***             else if(count == 0) state++;


=================================================================================
=== Instance: /SPI_slave_sequencer_pkg
=== Design Unit: work.SPI_slave_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         0         4     0.00%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_sequencer.sv
    1                                                package SPI_slave_sequencer_pkg;
    2                                                import uvm_pkg::*;
    3                                                import SPI_slave_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class SPI_slave_sequencer extends uvm_sequencer #(SPI_slave_seq_item);
    7               1                    ***0***         `uvm_component_utils(SPI_slave_sequencer);
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                    function new(string name = "SPI_slave_sequencer", uvm_component parent = null);
    10              1                    ***0***             super.new(name, parent);


=================================================================================
=== Instance: /SPI_slave_monitor_pkg
=== Design Unit: work.SPI_slave_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_monitor.sv
------------------------------------IF Branch------------------------------------
    39                                      3003     Count coming in to IF
    39              1                    ***0***                 `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)
                                            3003     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      23        20         3    86.95%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_monitor.sv
    1                                                package SPI_slave_monitor_pkg;
    2                                                import SPI_slave_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class SPI_slave_monitor extends uvm_monitor;
    7               1                    ***0***         `uvm_component_utils(SPI_slave_monitor);
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                    SPI_slave_seq_item rsp_seq_item;
    10                                                   virtual SPI_slave_if slave_if;
    11                                                   uvm_analysis_port #(SPI_slave_seq_item) mon_ap;
    12                                               
    13                                                   function new(string name = "SPI_slave_monitor", uvm_component parent = null);
    14              1                          1             super.new(name, parent);
    15                                                   endfunction
    16                                               
    17                                                   function void build_phase(uvm_phase phase);
    18              1                          1             super.build_phase(phase);
    19              1                          1             mon_ap = new("mon_ap", this);
    20                                                   endfunction
    21                                               
    22                                                   task run_phase(uvm_phase phase);
    23              1                          1             super.run_phase(phase);
    24              1                          1             forever begin
    25              1                       3004                 rsp_seq_item = SPI_slave_seq_item::type_id::create("rsp_seq_item");
    26              1                       3004                 @(negedge slave_if.clk);
    27              1                       3003                 rsp_seq_item.rst_n = slave_if.rst_n;
    28              1                       3003                 rsp_seq_item.SS_n = slave_if.SS_n;
    29              1                       3003                 rsp_seq_item.MOSI  = slave_if.MOSI;
    30              1                       3003                 rsp_seq_item.tx_valid = slave_if.tx_valid;
    31              1                       3003                 rsp_seq_item.tx_data = slave_if.tx_data;
    32              1                       3003                 rsp_seq_item.rx_valid = slave_if.rx_valid;
    33              1                       3003                 rsp_seq_item.rx_data = slave_if.rx_data;
    34              1                       3003                 rsp_seq_item.MISO = slave_if.MISO;
    35              1                       3003                 rsp_seq_item.rx_valid_ref = slave_if.rx_valid_ref;
    36              1                       3003                 rsp_seq_item.rx_data_ref = slave_if.rx_data_ref;
    37              1                       3003                 rsp_seq_item.MISO_ref = slave_if.MISO_ref;
    38              1                       3003                 mon_ap.write(rsp_seq_item);
    39              1                    ***0***                 `uvm_info("run_phase", rsp_seq_item.convert2string(), UVM_HIGH)


=================================================================================
=== Instance: /SPI_slave_driver_pkg
=== Design Unit: work.SPI_slave_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         0         2     0.00%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_driver.sv
------------------------------------IF Branch------------------------------------
    28                                   ***0***     Count coming in to IF
    28              1                    ***0***                 `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16         0        16     0.00%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_driver.sv
    1                                                package SPI_slave_driver_pkg;
    2                                                import uvm_pkg::*;
    3                                                import SPI_slave_seq_item_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class SPI_slave_driver extends uvm_driver #(SPI_slave_seq_item);
    7               1                    ***0***         `uvm_component_utils(SPI_slave_driver);
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                    virtual SPI_slave_if slave_if;
    10                                                   SPI_slave_seq_item stim_seq_item;
    11                                               
    12                                                   function new(string name = "SPI_slave_driver", uvm_component parent = null);
    13              1                    ***0***             super.new(name, parent);
    14                                                   endfunction
    15                                               
    16                                                   task run_phase(uvm_phase phase);
    17              1                    ***0***             super.run_phase(phase);
    18              1                    ***0***             forever begin
    19              1                    ***0***                 stim_seq_item = SPI_slave_seq_item::type_id::create("stim_seq_item");
    20              1                    ***0***                 seq_item_port.get_next_item(stim_seq_item);
    21              1                    ***0***                 slave_if.rst_n = stim_seq_item.rst_n;
    22              1                    ***0***                 slave_if.SS_n = stim_seq_item.SS_n;
    23              1                    ***0***                 slave_if.tx_valid = stim_seq_item.tx_valid;
    24              1                    ***0***                 slave_if.tx_data = stim_seq_item.tx_data;
    25              1                    ***0***                 slave_if.MOSI = stim_seq_item.MOSI;
    26              1                    ***0***                 @(negedge slave_if.clk);
    27              1                    ***0***                 seq_item_port.item_done();
    28              1                    ***0***                 `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH);


=================================================================================
=== Instance: /SPI_slave_agent_pkg
=== Design Unit: work.SPI_slave_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_agent.sv
------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              1                    ***0***             if(!uvm_config_db#(SPI_slave_config)::get(this,"","CFG_SLAVE",slave_cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    26                                   ***0***     Count coming in to IF
    26              1                    ***0***                 `uvm_fatal("build_phase","Agent - unable to get configuration object");  
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    28                                         1     Count coming in to IF
    28              1                    ***0***             if(slave_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                    ***0***             if(slave_cfg.is_active == UVM_ACTIVE) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         8         7    53.33%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_agent.sv
    1                                                package SPI_slave_agent_pkg;
    2                                                import SPI_slave_seq_item_pkg::*;
    3                                                import SPI_slave_driver_pkg::*;
    4                                                import SPI_slave_monitor_pkg::*;
    5                                                import SPI_slave_sequencer_pkg::*;
    6                                                import SPI_slave_config_pkg::*;
    7                                                import uvm_pkg::*;
    8                                                `include "uvm_macros.svh"
    9                                                
    10                                               class SPI_slave_agent extends uvm_agent;
    11              1                    ***0***         `uvm_component_utils(SPI_slave_agent);
    11              2                    ***0***     
    11              3                          2     
    12                                               
    13                                                   SPI_slave_driver driver;
    14                                                   SPI_slave_monitor monitor;
    15                                                   SPI_slave_sequencer sqr;
    16                                                   SPI_slave_config slave_cfg;
    17                                                   uvm_analysis_port #(SPI_slave_seq_item) agt_ap;
    18                                               
    19                                                   function  new(string name = "SPI_slave_agent" , uvm_component parent = null);
    20              1                          1             super.new(name,parent);
    21                                                   endfunction
    22                                               
    23                                                   function void build_phase(uvm_phase phase);
    24              1                          1             super.build_phase(phase);
    25                                                       if(!uvm_config_db#(SPI_slave_config)::get(this,"","CFG_SLAVE",slave_cfg))
    26              1                    ***0***                 `uvm_fatal("build_phase","Agent - unable to get configuration object");  
    27                                                       
    28                                                       if(slave_cfg.is_active == UVM_ACTIVE) begin
    29              1                    ***0***                 driver = SPI_slave_driver::type_id::create("driver",this);
    30              1                    ***0***                 sqr = SPI_slave_sequencer::type_id::create("sqr",this);  
    31                                                       end
    32              1                          1             monitor = SPI_slave_monitor::type_id::create("monitor",this);
    33              1                          1             agt_ap = new("agt_ap",this);
    34                                                   endfunction
    35                                               
    36                                                   function void connect_phase(uvm_phase phase);
    37              1                          1             super.connect_phase(phase);
    38                                                       if(slave_cfg.is_active == UVM_ACTIVE) begin
    39              1                    ***0***                 driver.slave_if = slave_cfg.slave_if;
    40              1                    ***0***                 driver.seq_item_port.connect(sqr.seq_item_export);          
    41                                                       end
    42              1                          1             monitor.slave_if = slave_cfg.slave_if;
    43              1                          1             monitor.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /SPI_slave_coverage_pkg
=== Design Unit: work.SPI_slave_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          4        na        na        na
            Covergroup Bins         22        22         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /SPI_slave_coverage_pkg/SPI_slave_coverage/covgrp 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    22         22          -                      
    missing/total bins:                                     0         22          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross SS_n_MOSI_cr                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_slave_coverage_pkg::SPI_slave_coverage::covgrp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    22         22          -                      
    missing/total bins:                                     0         22          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        bin rx_data_all_values[0]                         922          1          -    Covered              
        bin rx_data_all_values[1]                         711          1          -    Covered              
        bin rx_data_all_values[2]                         815          1          -    Covered              
        bin rx_data_all_values[3]                         555          1          -    Covered              
        bin rx_data_trans[0=>1]                            35          1          -    Covered              
        bin rx_data_trans[1=>3]                             3          1          -    Covered              
        bin rx_data_trans[1=>0]                            33          1          -    Covered              
        bin rx_data_trans[0=>2]                            11          1          -    Covered              
        bin rx_data_trans[2=>3]                            36          1          -    Covered              
        bin rx_data_trans[2=>0]                            10          1          -    Covered              
        bin rx_data_trans[3=>1]                             1          1          -    Covered              
        bin rx_data_trans[3=>2]                            35          1          -    Covered              
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin normal_trans                                  122          1          -    Covered              
        bin extended_trans                                 35          1          -    Covered              
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_address                                 459          1          -    Covered              
        bin write_data                                    375          1          -    Covered              
        bin read_address                                  374          1          -    Covered              
        bin read_data                                     403          1          -    Covered              
    Cross SS_n_MOSI_cr                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <extended_trans,read_data>                 10          1          -    Covered              
            bin <normal_trans,read_address>                21          1          -    Covered              
            bin <normal_trans,write_data>                  16          1          -    Covered              
            bin <normal_trans,write_address>               18          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin not_r_data_ext4                      9                     -    Occurred             
            ignore_bin not_r_data_ext3                      5                     -    Occurred             
            ignore_bin not_r_data_ext2                      0                     -    ZERO                 
            ignore_bin not_r_data_ext1                      4                     -    Occurred             
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_coverage.sv
    1                                                package SPI_slave_coverage_pkg;
    2                                                import SPI_slave_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class SPI_slave_coverage extends  uvm_scoreboard;
    7               1                    ***0***         `uvm_component_utils(SPI_slave_coverage);
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                    uvm_analysis_export #(SPI_slave_seq_item) cov_export;
    10                                                   uvm_tlm_analysis_fifo #(SPI_slave_seq_item) cov_fifo;
    11                                                   SPI_slave_seq_item seq_item_cov;
    12                                               
    13                                                   covergroup covgrp;
    14                                               
    15                                                       rx_data_cp: coverpoint seq_item_cov.rx_data[9:8] {
    16                                                           bins rx_data_all_values[] = {[0:3]}; 
    17                                                           bins rx_data_trans[] = (0 => 1), (1 => 3), (1 => 0), (0 => 2),
    18                                                                                  (2 => 3), (2 => 0), (3 => 1), (3 => 2);
    19                                                       }
    20                                               
    21                                                       SS_n_cp: coverpoint seq_item_cov.SS_n {
    22                                                           bins normal_trans = (1 => 0[*13] => 1);
    23                                                           bins extended_trans = (1 => 0[*23] => 1);
    24                                                       }
    25                                               
    26                                                       MOSI_cp: coverpoint seq_item_cov.MOSI{
    27                                                           bins write_address = (0 => 0 => 0);
    28                                                           bins write_data    = (0 => 0 => 1);
    29                                                           bins read_address  = (1 => 1 => 0);
    30                                                           bins read_data     = (1 => 1 => 1);
    31                                                       }
    32                                               
    33                                                       SS_n_MOSI_cr: cross SS_n_cp, MOSI_cp{
    34                                                           ignore_bins not_r_data_ext1 = binsof(MOSI_cp.write_address) && binsof(SS_n_cp.extended_trans);
    35                                                           ignore_bins not_r_data_ext2 = binsof(MOSI_cp.write_data) && binsof(SS_n_cp.extended_trans);
    36                                                           ignore_bins not_r_data_ext3 = binsof(MOSI_cp.read_address) && binsof(SS_n_cp.extended_trans);
    37                                                           ignore_bins not_r_data_ext4 = binsof(MOSI_cp.read_data) && binsof(SS_n_cp.normal_trans);
    38                                                       }
    39                                                   endgroup
    40                                               
    41                                                   function new(string name = "SPI_slave_coverage", uvm_component parent = null);
    42              1                          1             super.new(name, parent);
    43              1                          1             covgrp = new;
    44                                                   endfunction
    45                                               
    46                                                   function void build_phase(uvm_phase phase);
    47              1                          1             super.build_phase(phase);
    48              1                          1             cov_export = new("cov_export", this);
    49              1                          1             cov_fifo = new("cov_fifo", this);
    50                                                   endfunction
    51                                               
    52                                                   function void connect_phase(uvm_phase phase);
    53              1                          1             super.connect_phase(phase);
    54              1                          1             cov_export.connect(cov_fifo.analysis_export);
    55                                                   endfunction
    56                                               
    57                                                   task run_phase(uvm_phase phase);
    58              1                          1             super.run_phase(phase);
    59              1                          1             forever begin
    60              1                       3004                 cov_fifo.get(seq_item_cov);
    61              1                       3003                 covgrp.sample();


=================================================================================
=== Instance: /SPI_slave_scoreboard_pkg
=== Design Unit: work.SPI_slave_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        26        10        16    38.46%

================================Branch Details================================

Branch Coverage for instance /SPI_slave_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_scoreboard.sv
------------------------------------IF Branch------------------------------------
    39                                      3003     Count coming in to IF
    39              1                    ***0***                 if (seq_item_sb.rx_data != seq_item_sb.rx_data_ref) begin
    43              1                       3003                 else rx_data_correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    40                                   ***0***     Count coming in to IF
    40              1                    ***0***                     `uvm_error("run_phase", $sformatf("Comparsion of rx_data failed, DUT:%s While rx_data_ref = %h", seq_item_sb.convert2string(), seq_item_sb.rx_data_ref));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    45                                      3003     Count coming in to IF
    45              1                    ***0***                 if (seq_item_sb.rx_valid != seq_item_sb.rx_valid_ref) begin
    49              1                       3003                 else rx_valid_correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              1                    ***0***                     `uvm_error("run_phase", $sformatf("comparsion of rx_valid failed, DUT:%s While rx_valid_ref = %b", seq_item_sb.convert2string(), seq_item_sb.rx_valid_ref));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    51                                      3003     Count coming in to IF
    51              1                    ***0***                 if (seq_item_sb.MISO != seq_item_sb.MISO_ref) begin
    55              1                       3003                 else MISO_correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                   ***0***     Count coming in to IF
    52              1                    ***0***                     `uvm_error("run_phase", $sformatf("comparsion of MISO failed, DUT:%s While MISO_ref = %b", seq_item_sb.convert2string(), seq_item_sb.MISO_ref));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                         1     Count coming in to IF
    61              1                          1             `uvm_info("report_phase", "SPI SLAVE SCOREBOARD", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                         1     Count coming in to IF
    62              1                          1             `uvm_info("report_phase", $sformatf("Total successful rx_data: %d", rx_data_correct_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                         1     Count coming in to IF
    63              1                          1             `uvm_info("report_phase", $sformatf("Total failed rx_data: %d", rx_data_error_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                          1             `uvm_info("report_phase", $sformatf("Total successful rx_valid: %d", rx_valid_correct_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    65                                         1     Count coming in to IF
    65              1                          1             `uvm_info("report_phase", $sformatf("Total failed rx_valid: %d", rx_valid_error_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    66                                         1     Count coming in to IF
    66              1                          1             `uvm_info("report_phase", $sformatf("Total successful MISO: %d", MISO_correct_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                         1     Count coming in to IF
    67              1                          1             `uvm_info("report_phase", $sformatf("Total failed MISO: %d", MISO_error_count), UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       3         0         3     0.00%

================================Condition Details================================

Condition Coverage for instance /SPI_slave_scoreboard_pkg --

  File SPI_slave_scoreboard.sv
----------------Focused Condition View-------------------
Line       39 Item    1  (this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                                  Input Term   Covered  Reason for no coverage   Hint
                                                 -----------  --------  -----------------------  --------------
  (this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                    Non-masking condition(s)      
 ---------  ---------  --------------------                                          -------------------------     
  Row   1:          1  (this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.rx_data != this.seq_item_sb.rx_data_ref)_1  -                             

----------------Focused Condition View-------------------
Line       45 Item    1  (this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                                    Input Term   Covered  Reason for no coverage   Hint
                                                   -----------  --------  -----------------------  --------------
  (this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                                      Non-masking condition(s)      
 ---------  ---------  --------------------                                            -------------------------     
  Row   1:          1  (this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.rx_valid != this.seq_item_sb.rx_valid_ref)_1  -                             

----------------Focused Condition View-------------------
Line       51 Item    1  (this.seq_item_sb.MISO != this.seq_item_sb.MISO_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                            Input Term   Covered  Reason for no coverage   Hint
                                           -----------  --------  -----------------------  --------------
  (this.seq_item_sb.MISO != this.seq_item_sb.MISO_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                              Non-masking condition(s)      
 ---------  ---------  --------------------                                    -------------------------     
  Row   1:          1  (this.seq_item_sb.MISO != this.seq_item_sb.MISO_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.MISO != this.seq_item_sb.MISO_ref)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      35        27         8    77.14%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_scoreboard.sv
    1                                                package SPI_slave_scoreboard_pkg;
    2                                                import SPI_slave_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class SPI_slave_scoreboard extends  uvm_scoreboard;
    7               1                    ***0***         `uvm_component_utils(SPI_slave_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                    uvm_analysis_export #(SPI_slave_seq_item) sb_export;
    10                                                   uvm_tlm_analysis_fifo #(SPI_slave_seq_item) sb_fifo;
    11                                                   SPI_slave_seq_item seq_item_sb;
    12                                               
    13              1                          1         int rx_valid_error_count = 0;
    14              1                          1         int rx_data_error_count = 0;
    15              1                          1         int MISO_error_count = 0;
    16              1                          1         int rx_valid_correct_count = 0;
    17              1                          1         int rx_data_correct_count = 0;
    18              1                          1         int MISO_correct_count = 0;
    19                                               
    20                                                   function new(string name = "SPI_slave_scoreboard", uvm_component parent = null);
    21              1                          1             super.new(name, parent);
    22                                                   endfunction
    23                                               
    24                                                   function void build_phase(uvm_phase phase);
    25              1                          1             super.build_phase(phase);
    26              1                          1             sb_export = new("sb_export", this);
    27              1                          1             sb_fifo = new("sb_fifo", this);
    28                                                   endfunction
    29                                               
    30                                                   function void connect_phase(uvm_phase phase);
    31              1                          1             super.connect_phase(phase);
    32              1                          1             sb_export.connect(sb_fifo.analysis_export);
    33                                                   endfunction
    34                                               
    35                                                   task run_phase(uvm_phase phase);
    36              1                          1             super.run_phase(phase);
    37              1                          1             forever begin
    38              1                       3004                 sb_fifo.get(seq_item_sb);
    39                                                           if (seq_item_sb.rx_data != seq_item_sb.rx_data_ref) begin
    40              1                    ***0***                     `uvm_error("run_phase", $sformatf("Comparsion of rx_data failed, DUT:%s While rx_data_ref = %h", seq_item_sb.convert2string(), seq_item_sb.rx_data_ref));
    41              1                    ***0***                     rx_data_error_count++;
    42                                                           end 
    43              1                       3003                 else rx_data_correct_count++;
    44                                               
    45                                                           if (seq_item_sb.rx_valid != seq_item_sb.rx_valid_ref) begin
    46              1                    ***0***                     `uvm_error("run_phase", $sformatf("comparsion of rx_valid failed, DUT:%s While rx_valid_ref = %b", seq_item_sb.convert2string(), seq_item_sb.rx_valid_ref));
    47              1                    ***0***                     rx_valid_error_count++;
    48                                                           end 
    49              1                       3003                 else rx_valid_correct_count++;
    50                                               
    51                                                           if (seq_item_sb.MISO != seq_item_sb.MISO_ref) begin
    52              1                    ***0***                     `uvm_error("run_phase", $sformatf("comparsion of MISO failed, DUT:%s While MISO_ref = %b", seq_item_sb.convert2string(), seq_item_sb.MISO_ref));
    53              1                    ***0***                     MISO_error_count++;
    54                                                           end 
    55              1                       3003                 else MISO_correct_count++;
    56                                                       end
    57                                                   endtask
    58                                               
    59                                                   function void report_phase (uvm_phase phase);
    60              1                          1             super.report_phase(phase);
    61              1                          1             `uvm_info("report_phase", "SPI SLAVE SCOREBOARD", UVM_LOW);
    62              1                          1             `uvm_info("report_phase", $sformatf("Total successful rx_data: %d", rx_data_correct_count), UVM_LOW);
    63              1                          1             `uvm_info("report_phase", $sformatf("Total failed rx_data: %d", rx_data_error_count), UVM_LOW);
    64              1                          1             `uvm_info("report_phase", $sformatf("Total successful rx_valid: %d", rx_valid_correct_count), UVM_LOW);
    65              1                          1             `uvm_info("report_phase", $sformatf("Total failed rx_valid: %d", rx_valid_error_count), UVM_LOW);
    66              1                          1             `uvm_info("report_phase", $sformatf("Total successful MISO: %d", MISO_correct_count), UVM_LOW);
    67              1                          1             `uvm_info("report_phase", $sformatf("Total failed MISO: %d", MISO_error_count), UVM_LOW);


=================================================================================
=== Instance: /SPI_slave_env_pkg
=== Design Unit: work.SPI_slave_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /SPI_slave_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_slave_env.sv
    1                                                package SPI_slave_env_pkg;
    2                                                import SPI_slave_scoreboard_pkg::*;
    3                                                import SPI_slave_coverage_pkg::*;
    4                                                import SPI_slave_agent_pkg::*;
    5                                                import uvm_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                
    8                                                class SPI_slave_env extends uvm_env;
    9               1                    ***0***         `uvm_component_utils(SPI_slave_env)
    9               2                    ***0***     
    9               3                          2     
    10                                               
    11                                                   SPI_slave_agent agt;
    12                                                   SPI_slave_scoreboard sb;
    13                                                   SPI_slave_coverage cov;
    14                                               
    15                                                   function  new(string name = "SPI_slave_env" , uvm_component parent = null);
    16              1                          1             super.new(name,parent);
    17                                                   endfunction
    18                                               
    19                                                   function void build_phase(uvm_phase phase);
    20              1                          1             super.build_phase(phase);
    21              1                          1             agt = SPI_slave_agent::type_id::create("agt",this);
    22              1                          1             sb = SPI_slave_scoreboard::type_id::create("sb",this);
    23              1                          1             cov = SPI_slave_coverage::type_id::create("cov",this);
    24                                                   endfunction
    25                                               
    26                                                   function void connect_phase(uvm_phase phase);
    27              1                          1             super.connect_phase(phase);
    28              1                          1             agt.agt_ap.connect(sb.sb_export);
    29              1                          1             agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /WRAPPER_seq_item_pkg
=== Design Unit: work.WRAPPER_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        26        17         9    65.38%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_seq_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(WRAPPER_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                       3003     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(WRAPPER_seq_item)
                                            3003     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(WRAPPER_seq_item)
    6               4                    ***0***             `uvm_object_utils(WRAPPER_seq_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                       3003     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(WRAPPER_seq_item)
                                            3003     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(WRAPPER_seq_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    32                                      3000     Count coming in to IF
    32              1                        204                 if (count == 0 || !rst_n) begin
    37              1                       2796                 else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                      3000     Count coming in to IF
    45              1                        202                     if (!rst_n || SS_n) begin 
    49              1                       2798                     else count ++;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    51                                      3000     Count coming in to IF
    51              1                        483                     if (count > 12 && count < 23) begin
    56              1                         33                     end else if (count == 23) begin
    62              1                       2484                     else SS_n_HIGH = 0;
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                       483     Count coming in to IF
    52              1                        143                         if (state != 2'b11) begin
    55              1                        340                         else SS_n_HIGH = 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                        33     Count coming in to IF
    57              1                         33                         if (state == 2'b11) begin
    60              1                    ***0***                         else SS_n_HIGH = 0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                      3000     Count coming in to IF
    67              1                        746                     if(state_old == 2'b01) read_type = 0;
    68              1                        842                     else if(state_old == 2'b11) read_type = 1;
                                            1412     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                      3000     Count coming in to IF
    69              1                         11                     if(!rst_n && (state_old[1] == 1)) read_add_ok = 1;
    70              1                       2989                     else read_add_ok = 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      15        11         4    73.33%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_seq_item_pkg --

  File WRAPPER_seq_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       32 Item    1  ((this.count == 0) || ~this.rst_n)
Condition totals: 1 of 2 input terms covered = 50.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.count == 0)         Y
         this.rst_n         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.count == 0)_0   this.rst_n                    
  Row   2:          1  (this.count == 0)_1   -                             
  Row   3:    ***0***  this.rst_n_0          ~(this.count == 0)            
  Row   4:          1  this.rst_n_1          ~(this.count == 0)            

----------------Focused Condition View-------------------
Line       45 Item    1  (~this.rst_n || this.SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  this.rst_n         Y
   this.SS_n         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.rst_n_0          -                             
  Row   2:          1  this.rst_n_1          ~this.SS_n                    
  Row   3:          1  this.SS_n_0           this.rst_n                    
  Row   4:          1  this.SS_n_1           this.rst_n                    

----------------Focused Condition View-------------------
Line       51 Item    1  ((this.count > 12) && (this.count < 23))
Condition totals: 2 of 2 input terms covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.count > 12)         Y
  (this.count < 23)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.count > 12)_0   -                             
  Row   2:          1  (this.count > 12)_1   (this.count < 23)             
  Row   3:          1  (this.count < 23)_0   (this.count > 12)             
  Row   4:          1  (this.count < 23)_1   (this.count > 12)             

----------------Focused Condition View-------------------
Line       52 Item    1  (this.state != 3)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.state != 3)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.state != 3)_0   -                             
  Row   2:          1  (this.state != 3)_1   -                             

----------------Focused Condition View-------------------
Line       56 Item    1  (this.count == 23)
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (this.count == 23)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.count == 23)_0  -                             
  Row   2:          1  (this.count == 23)_1  -                             

----------------Focused Condition View-------------------
Line       57 Item    1  (this.state == 3)
Condition totals: 0 of 1 input term covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.state == 3)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (this.state == 3)_0   -                             
  Row   2:          1  (this.state == 3)_1   -                             

----------------Focused Condition View-------------------
Line       67 Item    1  (state_old == 1)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (state_old == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state_old == 1)_0    -                             
  Row   2:          1  (state_old == 1)_1    -                             

----------------Focused Condition View-------------------
Line       68 Item    1  (state_old == 3)
Condition totals: 1 of 1 input term covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (state_old == 3)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (state_old == 3)_0    -                             
  Row   2:          1  (state_old == 3)_1    -                             

----------------Focused Condition View-------------------
Line       69 Item    1  (~this.rst_n && state_old[1])
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
    this.rst_n         Y
  state_old[1]         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.rst_n_0          state_old[1]                  
  Row   2:          1  this.rst_n_1          -                             
  Row   3:          1  state_old[1]_0        ~this.rst_n                   
  Row   4:          1  state_old[1]_1        ~this.rst_n                   


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      35        24        11    68.57%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_seq_item.sv
    1                                                package WRAPPER_seq_item_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import shared_pkg::*;
    5                                                    class WRAPPER_seq_item extends uvm_sequence_item;
    6               1                    ***0***             `uvm_object_utils(WRAPPER_seq_item)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                       3003     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                       3003     
    6              10                    ***0***     
    7                                                    // Signals Delarations
    8                                                        rand bit   MOSI, SS_n,rst_n;;
    9                                                        bit   MISO;
    10                                                       bit   MISO_ref;
    11                                               
    12              1                       6014             rand bit [1:0] state = 2'b00;
    13                                                       static bit [1:0] state_old = 2'b00;
    14              1                       6014             int count = 0;
    15              1                       6014             bit SS_n_HIGH = 1;
    16                                                       rand bit [10:0] MOSI_array;
    17                                               
    18                                                       static bit rand_ok, read_add_ok, read_type;
    19                                               
    20                                                   // Functions 
    21                                                       function new(string name = "WRAPPER_seq_item");
    22              1                       6014                 super.new(name);
    23                                                       endfunction
    24                                               
    25                                                       function string convert2string();
    26              1                    ***0***                 return $sformatf("%s - rst_n = %b , SS_n = %b, MOSI = %b, DUT: MISO = %b", super.convert2string, rst_n, SS_n, MOSI, MISO);
    27                                                       endfunction
    28                                                       function string convert2string_stimulus();
    29              1                    ***0***                 return $sformatf("%s - rst_n = %b , SS_n = %b, MOSI = %b", super.convert2string, rst_n, SS_n, MOSI);
    30                                                       endfunction
    31                                                       function void pre_randomize();
    32                                                           if (count == 0 || !rst_n) begin
    33              1                        204                     MOSI_array.rand_mode(1);
    34              1                        204                     state.rand_mode(1);
    35              1                        204                     rand_ok = 1;
    36                                                           end
    37                                                           else begin
    38              1                       2796                     MOSI_array.rand_mode(0);
    39              1                       2796                     state.rand_mode(0);
    40              1                       2796                     rand_ok = 0;
    41                                                           end
    42                                                       endfunction
    43                                                       function void post_randomize();
    44                                                           begin
    45                                                               if (!rst_n || SS_n) begin 
    46              1                        202                         count = 0;
    47              1                        202                         SS_n_HIGH = 0;
    48                                                               end
    49              1                       2798                     else count ++;
    50                                               
    51                                                               if (count > 12 && count < 23) begin
    52                                                                   if (state != 2'b11) begin
    53              1                        143                             SS_n_HIGH = 1;
    54                                                                   end
    55              1                        340                         else SS_n_HIGH = 0;
    56                                                               end else if (count == 23) begin
    57                                                                   if (state == 2'b11) begin
    58              1                         33                             SS_n_HIGH = 1;
    59                                                                   end
    60              1                    ***0***                         else SS_n_HIGH = 0;
    61                                                               end
    62              1                       2484                     else SS_n_HIGH = 0;
    63                                               
    64                                                               
    65              1                       3000                     state_old = state;
    66                                               
    67              1                        746                     if(state_old == 2'b01) read_type = 0;
    68              1                        842                     else if(state_old == 2'b11) read_type = 1;
    69              1                         11                     if(!rst_n && (state_old[1] == 1)) read_add_ok = 1;
    70              1                       2989                     else read_add_ok = 0;


=================================================================================
=== Instance: /WRAPPER_coverage_pkg
=== Design Unit: work.WRAPPER_coverage_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      12        10         2    83.33%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_coverage.sv
    1                                                package WRAPPER_coverage_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                
    5                                                    import WRAPPER_seq_item_pkg::*;
    6                                                    import shared_pkg::*;
    7                                                    class WRAPPER_coverage extends uvm_component;
    8               1                    ***0***             `uvm_component_utils(WRAPPER_coverage)
    8               2                    ***0***     
    8               3                          2     
    9                                                        
    10                                                       uvm_analysis_export #(WRAPPER_seq_item) cvg_axp;
    11                                                       uvm_tlm_analysis_fifo #(WRAPPER_seq_item) cvg_fifo;
    12                                               
    13                                                       WRAPPER_seq_item cvg_seq_item;
    14                                               
    15                                                       //Cover Groups
    16                                                       covergroup WRAPPER_CVG;
    17                                                           
    18                                                       endgroup
    19                                                       function new (string name = "WRAPPER_coverage", uvm_component parent = null);
    20              1                          1                 super.new(name, parent);
    21                                                           //Create Covergroup 
    22                                                       endfunction
    23                                               
    24                                                       function void build_phase (uvm_phase phase);
    25              1                          1                 super.build_phase(phase);
    26                                               
    27              1                          1                 cvg_axp = new ("cvg_axp", this);
    28              1                          1                 cvg_fifo = new ("cvg_fifo", this);
    29                                                       endfunction
    30                                               
    31                                                       function void connect_phase(uvm_phase phase);
    32              1                          1                 super.connect_phase(phase);
    33              1                          1                 cvg_axp.connect(cvg_fifo.analysis_export);
    34                                                       endfunction
    35                                               
    36                                                       task run_phase(uvm_phase phase);
    37              1                          1                 super.run_phase(phase);
    38              1                          1                 forever begin
    39              1                       3004                     cvg_fifo.get(cvg_seq_item);


=================================================================================
=== Instance: /WRAPPER_scoreboard_pkg
=== Design Unit: work.WRAPPER_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_scoreboard.sv
------------------------------------IF Branch------------------------------------
    36                                      3003     Count coming in to IF
    36              1                    ***0***                     if (
    42              1                       3003                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    40                                   ***0***     Count coming in to IF
    40              1                    ***0***                         `uvm_error("run_phase", $sformatf("Comparison Failed - Transaction Received DUT : %s, Ref Model : MISO = %b", sb_seq_item.convert2string, sb_seq_item.MISO_ref));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    44                                      3003     Count coming in to IF
    44              1                    ***0***                         `uvm_info("run_phase", $sformatf("Correct RAM Comparison: %s", sb_seq_item.convert2string),UVM_HIGH);
                                            3003     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1                 `uvm_info("report_phase", $sformatf("Correct Tests = %d, Error Tests = %d", correct_cnt, error_cnt),UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         0         1     0.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_scoreboard_pkg --

  File WRAPPER_scoreboard.sv
----------------Focused Condition View-------------------
Line       37 Item    1  (this.sb_seq_item.MISO != this.sb_seq_item.MISO_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                            Input Term   Covered  Reason for no coverage   Hint
                                           -----------  --------  -----------------------  --------------
  (this.sb_seq_item.MISO != this.sb_seq_item.MISO_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                              Non-masking condition(s)      
 ---------  ---------  --------------------                                    -------------------------     
  Row   1:          1  (this.sb_seq_item.MISO != this.sb_seq_item.MISO_ref)_0  -                             
  Row   2:    ***0***  (this.sb_seq_item.MISO != this.sb_seq_item.MISO_ref)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        15         5    75.00%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_scoreboard.sv
    1                                                package WRAPPER_scoreboard_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import WRAPPER_seq_item_pkg::*;
    5                                                    class WRAPPER_scoreboard extends uvm_scoreboard;
    6               1                    ***0***             `uvm_component_utils(WRAPPER_scoreboard)
    6               2                    ***0***     
    6               3                          2     
    7                                                
    8                                                
    9                                                        uvm_analysis_export #(WRAPPER_seq_item) sb_axp;
    10                                                       uvm_tlm_analysis_fifo #(WRAPPER_seq_item) sb_fifo;
    11                                               
    12                                                       WRAPPER_seq_item sb_seq_item;
    13                                               
    14              1                          1             int error_cnt = 0, correct_cnt = 0;
    14              2                          1     
    15                                               
    16                                                       function new (string name = "WRAPPER_scoreboard", uvm_component parent = null);
    17              1                          1                 super.new(name, parent);
    18                                                       endfunction
    19                                               
    20                                                       function void build_phase(uvm_phase phase);
    21              1                          1                 super.build_phase(phase);
    22              1                          1                 sb_axp = new("sb_axp", this);
    23              1                          1                 sb_fifo = new("sb_fifo", this);
    24                                                       
    25                                                       endfunction
    26                                               
    27                                                       function void connect_phase(uvm_phase phase);
    28              1                          1                 super.connect_phase(phase);
    29              1                          1                 sb_axp.connect(sb_fifo.analysis_export);
    30                                                       endfunction
    31                                               
    32                                                       task run_phase(uvm_phase phase);
    33              1                          1                 super.run_phase(phase);
    34              1                          1                 forever begin
    35              1                       3004                     sb_fifo.get(sb_seq_item);
    36                                                               if (
    37                                                                   sb_seq_item.MISO != sb_seq_item.MISO_ref
    38                                                               ) begin
    39              1                    ***0***                         error_cnt++;
    40              1                    ***0***                         `uvm_error("run_phase", $sformatf("Comparison Failed - Transaction Received DUT : %s, Ref Model : MISO = %b", sb_seq_item.convert2string, sb_seq_item.MISO_ref));
    41                                                               end
    42                                                               else begin
    43              1                       3003                         correct_cnt++;
    44              1                    ***0***                         `uvm_info("run_phase", $sformatf("Correct RAM Comparison: %s", sb_seq_item.convert2string),UVM_HIGH);
    45                                                               end
    46                                                           end
    47                                                       endtask
    48                                               
    49                                                       function void report_phase (uvm_phase phase);
    50              1                          1                 super.report_phase(phase);
    51              1                          1                 `uvm_info("report_phase", $sformatf("Correct Tests = %d, Error Tests = %d", correct_cnt, error_cnt),UVM_MEDIUM)


=================================================================================
=== Instance: /WRAPPER_config_pkg
=== Design Unit: work.WRAPPER_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_config.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***             `uvm_object_utils(WRAPPER_config) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***             `uvm_object_utils(WRAPPER_config) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***             `uvm_object_utils(WRAPPER_config) 
    5               4                    ***0***             `uvm_object_utils(WRAPPER_config) 
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***             `uvm_object_utils(WRAPPER_config) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***             `uvm_object_utils(WRAPPER_config) 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_config_pkg --

  File WRAPPER_config.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_config.sv
    1                                                package WRAPPER_config_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    class WRAPPER_config extends uvm_object;
    5               1                    ***0***             `uvm_object_utils(WRAPPER_config) 
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                
    7                                                        virtual WRAPPER_IF wrapper_if;
    8                                                        uvm_active_passive_enum is_active;
    9                                                
    10                                                       function new(string name = "WRAPPER_config");
    11              1                          1                 super.new(name);


=================================================================================
=== Instance: /WRAPPER_driver_pkg
=== Design Unit: work.WRAPPER_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_driver.sv
------------------------------------IF Branch------------------------------------
    26                                      3003     Count coming in to IF
    26              1                    ***0***                     `uvm_info("run_phase", dvr_seq_item.convert2string_stimulus, UVM_HIGH);
                                            3003     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_driver.sv
    1                                                package WRAPPER_driver_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import WRAPPER_seq_item_pkg::*;
    5                                                    class WRAPPER_driver extends uvm_driver #(WRAPPER_seq_item);
    6               1                    ***0***             `uvm_component_utils(WRAPPER_driver)
    6               2                    ***0***     
    6               3                          2     
    7                                                
    8                                                        WRAPPER_seq_item dvr_seq_item;
    9                                                        virtual WRAPPER_IF wrapper_dvr_if;
    10                                                   
    11                                                       function new (string name = "WRAPPER_driver", uvm_component parent = null);
    12              1                          1                 super.new(name, parent);
    13                                                       endfunction
    14                                               
    15                                                       task run_phase (uvm_phase phase);
    16              1                          1                 super.run_phase(phase);
    17              1                          1                 forever begin
    18              1                       3004                     dvr_seq_item = WRAPPER_seq_item::type_id::create("dvr_seq_item");
    19              1                       3004                     seq_item_port.get_next_item(dvr_seq_item);
    20                                                               //Drive Signals 
    21              1                       3003                     wrapper_dvr_if.rst_n = dvr_seq_item.rst_n;
    22              1                       3003                     wrapper_dvr_if.MOSI = dvr_seq_item.MOSI;
    23              1                       3003                     wrapper_dvr_if.SS_n = dvr_seq_item.SS_n;
    24              1                       3003                     repeat(1)@(negedge wrapper_dvr_if.clk);
    25              1                       3003                     seq_item_port.item_done();
    26              1                    ***0***                     `uvm_info("run_phase", dvr_seq_item.convert2string_stimulus, UVM_HIGH);


=================================================================================
=== Instance: /WRAPPER_monitor_pkg
=== Design Unit: work.WRAPPER_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_monitor.sv
------------------------------------IF Branch------------------------------------
    34                                      3003     Count coming in to IF
    34              1                    ***0***                     `uvm_info("run_phase", mon_seq_item.convert2string, UVM_HIGH);
                                            3003     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        14         3    82.35%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_monitor.sv
    1                                                package WRAPPER_monitor_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import WRAPPER_seq_item_pkg::*;
    5                                                    class WRAPPER_monitor extends uvm_monitor;
    6               1                    ***0***             `uvm_component_utils(WRAPPER_monitor)
    6               2                    ***0***     
    6               3                          2     
    7                                                
    8                                                        virtual WRAPPER_IF wrapper_mon_if;
    9                                                        WRAPPER_seq_item mon_seq_item;
    10                                               
    11                                                       uvm_analysis_port #(WRAPPER_seq_item) mon_ap;
    12                                               
    13                                                       function new (string name = "WRAPPER_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction
    16                                               
    17                                                       function void build_phase (uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 mon_ap = new("mon_ap", this);
    20                                                       endfunction
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                       3004                     mon_seq_item = WRAPPER_seq_item::type_id::create("mon_seq_item");
    26                                                               //Monitor the signals
    27              1                       3004                     repeat(1)@(negedge wrapper_mon_if.clk);
    28              1                       3003                     mon_seq_item.rst_n = wrapper_mon_if.rst_n;
    29              1                       3003                     mon_seq_item.MOSI = wrapper_mon_if.MOSI;
    30              1                       3003                     mon_seq_item.SS_n = wrapper_mon_if.SS_n;
    31              1                       3003                     mon_seq_item.MISO = wrapper_mon_if.MISO;
    32              1                       3003                     mon_seq_item.MISO_ref = wrapper_mon_if.MISO_ref;
    33              1                       3003                     mon_ap.write(mon_seq_item);
    34              1                    ***0***                     `uvm_info("run_phase", mon_seq_item.convert2string, UVM_HIGH);


=================================================================================
=== Instance: /WRAPPER_sequencer_pkg
=== Design Unit: work.WRAPPER_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_sequencer.sv
    1                                                package WRAPPER_sequencer_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import WRAPPER_seq_item_pkg::*;
    5                                                    class WRAPPER_sequencer extends uvm_sequencer #(WRAPPER_seq_item);
    6               1                    ***0***             `uvm_component_utils(WRAPPER_sequencer)
    6               2                    ***0***     
    6               3                          2     
    7                                                
    8                                                        function new (string name = "WRAPPER_sequencer", uvm_component parent = null);
    9               1                          1                 super.new(name, parent);


=================================================================================
=== Instance: /WRAPPER_agent_pkg
=== Design Unit: work.WRAPPER_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         3         5    37.50%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_agent.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***                 if (!uvm_config_db #(WRAPPER_config)::get(this,"","CFG_WRAPPER",wrapper_cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***                     `uvm_fatal("build_phase", "Error - Wrapper Agent cannot retrieve the config object");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    31                                         1     Count coming in to IF
    31              1                          1                 if (wrapper_cfg.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                         1     Count coming in to IF
    41              1                          1                 if(wrapper_cfg.is_active == UVM_ACTIVE) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_agent.sv
    1                                                package WRAPPER_agent_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import WRAPPER_sequencer_pkg::*;
    5                                                    import WRAPPER_monitor_pkg::*;
    6                                                    import WRAPPER_driver_pkg::*;
    7                                                    import WRAPPER_seq_item_pkg::*;
    8                                                    import WRAPPER_config_pkg::*;
    9                                                    class WRAPPER_agent extends uvm_agent;
    10              1                    ***0***             `uvm_component_utils(WRAPPER_agent)
    10              2                    ***0***     
    10              3                          2     
    11                                               
    12                                                       WRAPPER_config wrapper_cfg;
    13                                               
    14                                                       WRAPPER_sequencer wrapper_sqr;
    15                                                       WRAPPER_monitor wrapper_mon;
    16                                                       WRAPPER_driver wrapper_dvr;
    17                                               
    18                                                       uvm_analysis_port #(WRAPPER_seq_item) agt_ap;
    19                                               
    20                                                       function new (string name = "WRAPPER_agent", uvm_component parent = null);
    21              1                          1                 super.new(name, parent);
    22                                                       endfunction
    23                                               
    24                                                       function void build_phase(uvm_phase phase);
    25              1                          1                 super.build_phase(phase);
    26                                                           if (!uvm_config_db #(WRAPPER_config)::get(this,"","CFG_WRAPPER",wrapper_cfg))
    27              1                    ***0***                     `uvm_fatal("build_phase", "Error - Wrapper Agent cannot retrieve the config object");
    28                                               
    29              1                          1                 wrapper_mon = WRAPPER_monitor::type_id::create("wrapper_mon", this);
    30                                               
    31                                                           if (wrapper_cfg.is_active == UVM_ACTIVE) begin
    32              1                          1                     wrapper_dvr = WRAPPER_driver::type_id::create("wrapper_dvr", this);
    33              1                          1                     wrapper_sqr = WRAPPER_sequencer::type_id::create("wrapper_sqr", this);
    34                                                           end
    35                                               
    36              1                          1                 agt_ap = new ("agt_ap", this);
    37                                                       endfunction
    38                                               
    39                                                       function void connect_phase (uvm_phase phase);
    40              1                          1                 super.connect_phase(phase);
    41                                                           if(wrapper_cfg.is_active == UVM_ACTIVE) begin
    42              1                          1                     wrapper_dvr.wrapper_dvr_if = wrapper_cfg.wrapper_if;
    43              1                          1                     wrapper_dvr.seq_item_port.connect(wrapper_sqr.seq_item_export);
    44                                                           end
    45              1                          1                 wrapper_mon.wrapper_mon_if = wrapper_cfg.wrapper_if;
    46              1                          1                 wrapper_mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /WRAPPER_env_pkg
=== Design Unit: work.WRAPPER_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_env.sv
    1                                                package WRAPPER_env_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import WRAPPER_agent_pkg::*;
    5                                                    import WRAPPER_scoreboard_pkg::*;
    6                                                    import WRAPPER_coverage_pkg::*;
    7                                                    class WRAPPER_env extends uvm_env;
    8               1                    ***0***             `uvm_component_utils(WRAPPER_env)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                                       WRAPPER_agent wrapper_agt;
    11                                                       WRAPPER_scoreboard wrapper_sb;
    12                                                       WRAPPER_coverage wrapper_cvg;
    13                                               
    14                                                       function new (string name = "WRAPPER_env", uvm_component parent = null);
    15              1                          1                 super.new(name, parent);
    16                                                       endfunction
    17                                               
    18                                                       function void build_phase(uvm_phase phase);
    19              1                          1                 super.build_phase(phase);
    20              1                          1                 wrapper_agt = WRAPPER_agent::type_id::create("wrapper_agt", this);
    21              1                          1                 wrapper_sb= WRAPPER_scoreboard::type_id::create("wrapper_sb", this);
    22              1                          1                 wrapper_cvg = WRAPPER_coverage::type_id::create("wrapper_cvg", this);
    23                                                       endfunction
    24                                               
    25                                                       function void connect_phase(uvm_phase phase);
    26              1                          1                 super.connect_phase(phase);
    27              1                          1                 wrapper_agt.agt_ap.connect(wrapper_sb.sb_axp);
    28              1                          1                 wrapper_agt.agt_ap.connect(wrapper_cvg.cvg_axp);


=================================================================================
=== Instance: /WRAPPER_sequence_pkg
=== Design Unit: work.WRAPPER_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/WRAPPER_sequence_pkg/WRAPPER_write_only_seq/body/#ublk#73704343#37/immed__39
                     WRAPPER_sequence.sv(39)            0          1
/WRAPPER_sequence_pkg/WRAPPER_read_only_seq/body/#anonblk#73704343#58#4#/#ublk#73704343#58/immed__62
                     WRAPPER_sequence.sv(62)            0          1
/WRAPPER_sequence_pkg/WRAPPER_write_read_seq/body/#anonblk#73704343#81#4#/#ublk#73704343#81/immed__85
                     WRAPPER_sequence.sv(85)            0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        44        12        32    27.27%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_sequence.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***             `uvm_object_utils(WRAPPER_reset_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          3     Count coming in to IF
    7               2                    ***0***             `uvm_object_utils(WRAPPER_reset_seq)
                                               3     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***             `uvm_object_utils(WRAPPER_reset_seq)
    7               4                    ***0***             `uvm_object_utils(WRAPPER_reset_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                          3     Count coming in to IF
    7               5                    ***0***             `uvm_object_utils(WRAPPER_reset_seq)
                                               3     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***             `uvm_object_utils(WRAPPER_reset_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***             `uvm_object_utils(WRAPPER_write_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              2                    ***0***             `uvm_object_utils(WRAPPER_write_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              3                    ***0***             `uvm_object_utils(WRAPPER_write_only_seq)
    25              4                    ***0***             `uvm_object_utils(WRAPPER_write_only_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    25                                         1     Count coming in to IF
    25              5                    ***0***             `uvm_object_utils(WRAPPER_write_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              6                    ***0***             `uvm_object_utils(WRAPPER_write_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              1                    ***0***             `uvm_object_utils(WRAPPER_read_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    45                                         1     Count coming in to IF
    45              2                    ***0***             `uvm_object_utils(WRAPPER_read_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              3                    ***0***             `uvm_object_utils(WRAPPER_read_only_seq)
    45              4                    ***0***             `uvm_object_utils(WRAPPER_read_only_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    45                                         1     Count coming in to IF
    45              5                    ***0***             `uvm_object_utils(WRAPPER_read_only_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              6                    ***0***             `uvm_object_utils(WRAPPER_read_only_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                      1000     Count coming in to IF
    60              1                          1                     if(i == 1) start_read = 1;
    61              1                        999                     else start_read = 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    68                                   ***0***     Count coming in to IF
    68              1                    ***0***             `uvm_object_utils(WRAPPER_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    68                                         1     Count coming in to IF
    68              2                    ***0***             `uvm_object_utils(WRAPPER_write_read_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    68                                   ***0***     Count coming in to IF
    68              3                    ***0***             `uvm_object_utils(WRAPPER_write_read_seq)
    68              4                    ***0***             `uvm_object_utils(WRAPPER_write_read_seq)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    68                                         1     Count coming in to IF
    68              5                    ***0***             `uvm_object_utils(WRAPPER_write_read_seq)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    68                                   ***0***     Count coming in to IF
    68              6                    ***0***             `uvm_object_utils(WRAPPER_write_read_seq)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    83                                      1000     Count coming in to IF
    83              1                          1                     if(i == 1) start_read = 1;
    84              1                        999                     else start_read = 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      10         2         8    20.00%

================================Condition Details================================

Condition Coverage for instance /WRAPPER_sequence_pkg --

  File WRAPPER_sequence.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       25 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       25 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       45 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       45 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       60 Item    1  (i == 1)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (i == 1)_0            -                             
  Row   2:          1  (i == 1)_1            -                             

----------------Focused Condition View-------------------
Line       68 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       68 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       83 Item    1  (i == 1)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (i == 1)_0            -                             
  Row   2:          1  (i == 1)_1            -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      76        44        32    57.89%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_sequence.sv
    1                                                package WRAPPER_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import shared_pkg::*;
    5                                                    import WRAPPER_seq_item_pkg::*;
    6                                                    class WRAPPER_reset_seq extends uvm_sequence #(WRAPPER_seq_item);
    7               1                    ***0***             `uvm_object_utils(WRAPPER_reset_seq)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          3     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                          3     
    7              10                    ***0***     
    8                                                
    9                                                        WRAPPER_seq_item wrapper_seq_item;
    10                                               
    11                                                       function new (string name = "WRAPPER_reset_seq");
    12              1                          1                 super.new(name);
    13                                                       endfunction
    14                                               
    15                                                       virtual task body();
    16              1                          3                 wrapper_seq_item = WRAPPER_seq_item::type_id::create("wrapper_seq_item");
    17              1                          3                 start_item(wrapper_seq_item);
    18              1                          3                 wrapper_seq_item.rst_n = 0;
    19              1                          3                 wrapper_seq_item.MOSI = 0;
    20              1                          3                 wrapper_seq_item.SS_n = 0;
    21              1                          3                 finish_item(wrapper_seq_item);
    22                                                       endtask
    23                                                   endclass
    24                                                   class WRAPPER_write_only_seq extends uvm_sequence #(WRAPPER_seq_item);
    25              1                    ***0***             `uvm_object_utils(WRAPPER_write_only_seq)
    25              2                    ***0***     
    25              3                    ***0***     
    25              4                    ***0***     
    25              5                    ***0***     
    25              6                          1     
    25              7                    ***0***     
    25              8                    ***0***     
    25              9                          1     
    25             10                    ***0***     
    26                                               
    27                                                       WRAPPER_seq_item wrapper_seq_item;
    28                                               
    29                                                       function new (string name = "WRAPPER_write_only_seq");
    30              1                          1                 super.new(name);
    31                                                       endfunction
    32                                               
    33                                                       virtual task body();
    34              1                          1                     wrapper_seq_item = WRAPPER_seq_item::type_id::create("wrapper_seq_item");
    35              1                          1                     wrapper_seq_item.read_only_const.constraint_mode(0);
    36              1                          1                     wrapper_seq_item.write_read_const.constraint_mode(0);
    37              1                       1000                 repeat (1000) begin
    38              1                       1000                     start_item(wrapper_seq_item);
    39                                                               assert(wrapper_seq_item.randomize);
    40              1                       1000                     finish_item(wrapper_seq_item);
    41                                                           end
    42                                                       endtask
    43                                                   endclass
    44                                                   class WRAPPER_read_only_seq extends uvm_sequence #(WRAPPER_seq_item);
    45              1                    ***0***             `uvm_object_utils(WRAPPER_read_only_seq)
    45              2                    ***0***     
    45              3                    ***0***     
    45              4                    ***0***     
    45              5                    ***0***     
    45              6                          1     
    45              7                    ***0***     
    45              8                    ***0***     
    45              9                          1     
    45             10                    ***0***     
    46                                               
    47                                                       WRAPPER_seq_item wrapper_seq_item;
    48                                               
    49                                                       function new (string name = "WRAPPER_read_only_seq");
    50              1                          1                 super.new(name);
    51                                                       endfunction
    52                                               
    53                                                       virtual task body();
    54              1                          1                     wrapper_seq_item = WRAPPER_seq_item::type_id::create("wrapper_seq_item");
    55              1                          1                     wrapper_seq_item.write_only_const.constraint_mode(0);
    56              1                          1                     wrapper_seq_item.read_only_const.constraint_mode(1);
    57              1                          1                     wrapper_seq_item.write_read_const.constraint_mode(0);
    58              1                          1                 for(int i = 0; i<1000; i++) begin
    58              2                       1000     
    59              1                       1000                     start_item(wrapper_seq_item);
    60              1                          1                     if(i == 1) start_read = 1;
    61              1                        999                     else start_read = 0;
    62                                                               assert(wrapper_seq_item.randomize);
    63              1                       1000                     finish_item(wrapper_seq_item);
    64                                                           end
    65                                                       endtask
    66                                                   endclass
    67                                                   class WRAPPER_write_read_seq extends uvm_sequence #(WRAPPER_seq_item);
    68              1                    ***0***             `uvm_object_utils(WRAPPER_write_read_seq)
    68              2                    ***0***     
    68              3                    ***0***     
    68              4                    ***0***     
    68              5                    ***0***     
    68              6                          1     
    68              7                    ***0***     
    68              8                    ***0***     
    68              9                          1     
    68             10                    ***0***     
    69                                               
    70                                                       WRAPPER_seq_item wrapper_seq_item;
    71                                               
    72                                                       function new (string name = "WRAPPER_write_read_seq");
    73              1                          1                 super.new(name);
    74                                                       endfunction
    75                                               
    76                                                       virtual task body();
    77              1                          1                     wrapper_seq_item = WRAPPER_seq_item::type_id::create("wrapper_seq_item");
    78              1                          1                     wrapper_seq_item.write_only_const.constraint_mode(0);
    79              1                          1                     wrapper_seq_item.read_only_const.constraint_mode(0);
    80              1                          1                     wrapper_seq_item.write_read_const.constraint_mode(1);
    81              1                          1                 for(int i = 0; i<1000; i++) begin
    81              2                       1000     
    82              1                       1000                     start_item(wrapper_seq_item);
    83              1                          1                     if(i == 1) start_read = 1;
    84              1                        999                     else start_read = 0;
    85                                                               assert(wrapper_seq_item.randomize);
    86              1                       1000                     finish_item(wrapper_seq_item);


=================================================================================
=== Instance: /WRAPPER_test_pkg
=== Design Unit: work.WRAPPER_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        36        15        21    41.66%

================================Branch Details================================

Branch Coverage for instance /WRAPPER_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_test.sv
------------------------------------IF Branch------------------------------------
    59                                         1     Count coming in to IF
    59              1                    ***0***                 if (!uvm_config_db #(virtual WRAPPER_IF)::get(this,"","WRAPPER_IF",wrapper_cfg.wrapper_if))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              1                    ***0***                     `uvm_fatal("build_phase", "Error - Test cannot retrieve the WRAPPER interface");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                    ***0***                 if (!uvm_config_db #(virtual SPI_slave_if)::get(this,"","SLAVE_IF",slave_cfg.slave_if))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    65                                   ***0***     Count coming in to IF
    65              1                    ***0***                     `uvm_fatal("build_phase", "Error - Test cannot retrieve the SLAVE interface");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                         1     Count coming in to IF
    69              1                    ***0***                 if (!uvm_config_db #(virtual RAM_IF)::get(this,"","RAM_IF",ram_cfg.ram_if))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    70                                   ***0***     Count coming in to IF
    70              1                    ***0***                     `uvm_fatal("build_phase", "Error - Test cannot retrieve the RAM interface");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    79                                         1     Count coming in to IF
    79              1                          1                 `uvm_info("run_phase", "Reset Asserted", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    81                                         1     Count coming in to IF
    81              1                          1                 `uvm_info("run_phase", "Reset Deasserted", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    83                                         1     Count coming in to IF
    83              1                          1                 `uvm_info("run_phase", "Write Only Seq Started", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    85                                         1     Count coming in to IF
    85              1                          1                 `uvm_info("run_phase", "Write Only Seq Ended", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    87                                         1     Count coming in to IF
    87              1                          1                 `uvm_info("run_phase", "Reset Asserted", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    89                                         1     Count coming in to IF
    89              1                          1                 `uvm_info("run_phase", "Reset Deasserted", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    91                                         1     Count coming in to IF
    91              1                          1                 `uvm_info("run_phase", "Read Only Seq Started", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    95                                         1     Count coming in to IF
    95              1                          1                 `uvm_info("run_phase", "Read Only Seq Ended", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    97                                         1     Count coming in to IF
    97              1                          1                 `uvm_info("run_phase", "Reset Asserted", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    99                                         1     Count coming in to IF
    99              1                          1                 `uvm_info("run_phase", "Reset Deasserted", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    101                                        1     Count coming in to IF
    101             1                          1                 `uvm_info("run_phase", "Write Read Seq Started", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    103                                        1     Count coming in to IF
    103             1                          1                 `uvm_info("run_phase", "Write Read Seq Ended", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      47        42         5    89.36%

================================Statement Details================================

Statement Coverage for instance /WRAPPER_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File WRAPPER_test.sv
    1                                                package WRAPPER_test_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include"uvm_macros.svh"
    4                                                    import shared_pkg::*;
    5                                                    import WRAPPER_config_pkg::*;
    6                                                    import WRAPPER_sequence_pkg::*;
    7                                                    import WRAPPER_seq_item_pkg::*;
    8                                                    import WRAPPER_env_pkg::*;
    9                                                
    10                                                   import SPI_slave_env_pkg::*;
    11                                                   import SPI_slave_config_pkg::*;
    12                                               
    13                                                   import RAM_env_pkg::*;
    14                                                   import RAM_config_pkg::*;
    15                                               
    16                                                   class WRAPPER_test extends uvm_test;
    17              1                    ***0***             `uvm_component_utils(WRAPPER_test)
    17              2                    ***0***     
    17              3                          4     
    18                                               
    19                                                       //ENV
    20                                                       WRAPPER_env wrapper_env;
    21                                                       RAM_env ram_env;
    22                                                       SPI_slave_env slave_env;
    23                                               
    24                                                       //Config Obj
    25                                                       WRAPPER_config wrapper_cfg;
    26                                                       RAM_config ram_cfg;
    27                                                       SPI_slave_config slave_cfg;
    28                                               
    29                                                       //Sequences
    30                                                       WRAPPER_reset_seq wrapper_reset;
    31                                                       WRAPPER_write_only_seq wrapper_write_only;
    32                                                       WRAPPER_read_only_seq wrapper_read_only;
    33                                                       WRAPPER_write_read_seq wrapper_write_read;
    34                                               
    35                                                       function new (string name = "WRAPPER_test", uvm_component parent = null);
    36              1                          1                 super.new(name, parent);
    37                                                       endfunction
    38                                               
    39                                                       
    40                                                       function void build_phase(uvm_phase phase);
    41              1                          1                 super.build_phase(phase);
    42                                                           //ENV Creation
    43              1                          1                 wrapper_env = WRAPPER_env::type_id::create("wrapper_env",this);
    44              1                          1                 slave_env = SPI_slave_env::type_id::create("slave_env",this);
    45              1                          1                 ram_env = RAM_env::type_id::create("ram_env",this);
    46                                                       
    47                                                           //Config Obj Creation
    48              1                          1                 wrapper_cfg = WRAPPER_config::type_id::create("wrapper_cfg", this);
    49              1                          1                 slave_cfg = SPI_slave_config::type_id::create("slave_cfg", this);
    50              1                          1                 ram_cfg = RAM_config::type_id::create("ram_cfg", this);
    51                                               
    52                                                           //Sequences Creation
    53              1                          1                 wrapper_reset = WRAPPER_reset_seq::type_id::create("wrapper_reset");
    54              1                          1                 wrapper_write_only = WRAPPER_write_only_seq::type_id::create("wrapper_write_only");
    55              1                          1                 wrapper_read_only = WRAPPER_read_only_seq::type_id::create("wrapper_read_only");
    56              1                          1                 wrapper_write_read = WRAPPER_write_read_seq::type_id::create("wrapper_write_read");
    57                                               
    58              1                          1                 wrapper_cfg.is_active = UVM_ACTIVE;
    59                                                           if (!uvm_config_db #(virtual WRAPPER_IF)::get(this,"","WRAPPER_IF",wrapper_cfg.wrapper_if))
    60              1                    ***0***                     `uvm_fatal("build_phase", "Error - Test cannot retrieve the WRAPPER interface");
    61              1                          1                 uvm_config_db #(WRAPPER_config)::set(this, "*", "CFG_WRAPPER", wrapper_cfg);
    62                                               
    63              1                          1                 slave_cfg.is_active = UVM_PASSIVE;
    64                                                           if (!uvm_config_db #(virtual SPI_slave_if)::get(this,"","SLAVE_IF",slave_cfg.slave_if))
    65              1                    ***0***                     `uvm_fatal("build_phase", "Error - Test cannot retrieve the SLAVE interface");
    66              1                          1                 uvm_config_db #(SPI_slave_config)::set(this, "*", "CFG_SLAVE", slave_cfg);
    67                                               
    68              1                          1                 ram_cfg.is_active = UVM_PASSIVE;
    69                                                           if (!uvm_config_db #(virtual RAM_IF)::get(this,"","RAM_IF",ram_cfg.ram_if))
    70              1                    ***0***                     `uvm_fatal("build_phase", "Error - Test cannot retrieve the RAM interface");
    71              1                          1                 uvm_config_db #(RAM_config)::set(this, "*", "CFG_RAM", ram_cfg);
    72                                               
    73                                                       endfunction
    74                                               
    75                                                       task run_phase(uvm_phase phase);
    76              1                          1                 super.run_phase(phase);
    77              1                          1                 phase.raise_objection(this);
    78                                               
    79              1                          1                 `uvm_info("run_phase", "Reset Asserted", UVM_LOW);
    80              1                          1                 wrapper_reset.start(wrapper_env.wrapper_agt.wrapper_sqr);
    81              1                          1                 `uvm_info("run_phase", "Reset Deasserted", UVM_LOW);
    82                                               
    83              1                          1                 `uvm_info("run_phase", "Write Only Seq Started", UVM_LOW);
    84              1                          1                 wrapper_write_only.start(wrapper_env.wrapper_agt.wrapper_sqr);
    85              1                          1                 `uvm_info("run_phase", "Write Only Seq Ended", UVM_LOW);
    86                                                           
    87              1                          1                 `uvm_info("run_phase", "Reset Asserted", UVM_LOW);
    88              1                          1                 wrapper_reset.start(wrapper_env.wrapper_agt.wrapper_sqr);
    89              1                          1                 `uvm_info("run_phase", "Reset Deasserted", UVM_LOW);
    90                                               
    91              1                          1                 `uvm_info("run_phase", "Read Only Seq Started", UVM_LOW);
    92              1                          1                 is_readOnly = 1;
    93              1                          1                 wrapper_read_only.start(wrapper_env.wrapper_agt.wrapper_sqr);
    94              1                          1                 is_readOnly = 0;
    95              1                          1                 `uvm_info("run_phase", "Read Only Seq Ended", UVM_LOW);
    96                                                           
    97              1                          1                 `uvm_info("run_phase", "Reset Asserted", UVM_LOW);
    98              1                          1                 wrapper_reset.start(wrapper_env.wrapper_agt.wrapper_sqr);
    99              1                          1                 `uvm_info("run_phase", "Reset Deasserted", UVM_LOW);
    100                                              
    101             1                          1                 `uvm_info("run_phase", "Write Read Seq Started", UVM_LOW);
    102             1                          1                 wrapper_write_read.start(wrapper_env.wrapper_agt.wrapper_sqr);
    103             1                          1                 `uvm_info("run_phase", "Write Read Seq Ended", UVM_LOW);
    104                                              
    105             1                          1                 phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /RAM_coverage_pkg/RAM_coverage/RAM_CVG          100.00%        100          -    Covered              
    covered/total bins:                                    16         16          -                      
    missing/total bins:                                     0         16          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint operation_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
    Cross OP_rxValid_cross                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross Read_OP_cross                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/RAM_coverage_pkg::RAM_coverage::RAM_CVG  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    16         16          -                      
    missing/total bins:                                     0         16          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bin_rxValid_High                              319          1          -    Covered              
        bin Bin_rxValid_Low                              2684          1          -    Covered              
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bin_txValid_High                              755          1          -    Covered              
        bin Bin_txValid_Low                              2248          1          -    Covered              
    Coverpoint operation_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 7          7          -                      
        missing/total bins:                                 0          7          -                      
        % Hit:                                        100.00%        100          -                      
        bin Bin_Write_Addr                                922          1          -    Covered              
        bin Bin_Write_Data                                711          1          -    Covered              
        bin Bin_Read_Addr                                 815          1          -    Covered              
        bin Bin_Read_Data                                 555          1          -    Covered              
        bin Bin_Write_AddrToData                           35          1          -    Covered              
        bin Bin_Read_AddrToData                            36          1          -    Covered              
        bin Bin_Trans                                     164          1          -    Covered              
    Cross OP_rxValid_cross                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin Bin_Write_Addr_rxValidHigh                110          1          -    Covered              
            bin Bin_Write_Data_rxValidHigh                 99          1          -    Covered              
            bin Bin_Read_Addr_rxValidHigh                  74          1          -    Covered              
            bin Bin_Read_Data_rxValidHigh                  36          1          -    Covered              
    Cross Read_OP_cross                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin Bin_out                                   228          1          -    Covered              
 TYPE /SPI_slave_coverage_pkg/SPI_slave_coverage/covgrp 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    22         22          -                      
    missing/total bins:                                     0         22          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
    Cross SS_n_MOSI_cr                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/SPI_slave_coverage_pkg::SPI_slave_coverage::covgrp  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    22         22          -                      
    missing/total bins:                                     0         22          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint rx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                12         12          -                      
        missing/total bins:                                 0         12          -                      
        % Hit:                                        100.00%        100          -                      
        bin rx_data_all_values[0]                         922          1          -    Covered              
        bin rx_data_all_values[1]                         711          1          -    Covered              
        bin rx_data_all_values[2]                         815          1          -    Covered              
        bin rx_data_all_values[3]                         555          1          -    Covered              
        bin rx_data_trans[0=>1]                            35          1          -    Covered              
        bin rx_data_trans[1=>3]                             3          1          -    Covered              
        bin rx_data_trans[1=>0]                            33          1          -    Covered              
        bin rx_data_trans[0=>2]                            11          1          -    Covered              
        bin rx_data_trans[2=>3]                            36          1          -    Covered              
        bin rx_data_trans[2=>0]                            10          1          -    Covered              
        bin rx_data_trans[3=>1]                             1          1          -    Covered              
        bin rx_data_trans[3=>2]                            35          1          -    Covered              
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin normal_trans                                  122          1          -    Covered              
        bin extended_trans                                 35          1          -    Covered              
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        bin write_address                                 459          1          -    Covered              
        bin write_data                                    375          1          -    Covered              
        bin read_address                                  374          1          -    Covered              
        bin read_data                                     403          1          -    Covered              
    Cross SS_n_MOSI_cr                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <extended_trans,read_data>                 10          1          -    Covered              
            bin <normal_trans,read_address>                21          1          -    Covered              
            bin <normal_trans,write_data>                  16          1          -    Covered              
            bin <normal_trans,write_address>               18          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin not_r_data_ext4                      9                     -    Occurred             
            ignore_bin not_r_data_ext3                      5                     -    Occurred             
            ignore_bin not_r_data_ext2                      0                     -    ZERO                 
            ignore_bin not_r_data_ext1                      4                     -    Occurred             

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 2

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_reset_txValid_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(36)    29 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_reset_dout_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(37)    29 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_addr_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(39)   870 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_data_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(40)   696 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_addr_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(41)   305 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_data_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(43)     9 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_addr_to_wr_data_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(45)    78 Covered   
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_addr_to_rd_data_cvr 
                                         RAM_sva Verilog  SVA  RAM_sva.sv(46)    72 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__received_address_p2 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(253)
                                                                                65 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__received_address_p1 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(252)
                                                                                73 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__counter_write_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(251)
                                                                              2172 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__counter_rst_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(250)
                                                                               195 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p9 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(249)
                                                                               730 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p8 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(248)
                                                                               427 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p7 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(247)
                                                                              1224 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p6 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(246)
                                                                                42 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p4 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(245)
                                                                                36 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p3 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(244)
                                                                               117 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p2 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(243)
                                                                               197 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__cs_p1 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(242)
                                                                               172 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__rx_valid_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(241)
                                                                               131 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__read_seq_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(240)
                                                                                68 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__write_seq_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(239)
                                                                               101 Covered   
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/cover__rst_p 
                                         SLAVE  Verilog  SVA  SPI_slave.sv(238)
                                                                                29 Covered   
/WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst/cover__MISO_wrapper_p 
                                         WRAPPER_sva Verilog  SVA  WRAPPER_sva.sv(21)
                                                                              2183 Covered   
/WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst/cover__rst_wrapper_p 
                                         WRAPPER_sva Verilog  SVA  WRAPPER_sva.sv(20)
                                                                                29 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 26

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_reset_txValid
                     RAM_sva.sv(23)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_reset_dout
                     RAM_sva.sv(24)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_addr
                     RAM_sva.sv(26)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_data
                     RAM_sva.sv(27)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_addr
                     RAM_sva.sv(28)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_data
                     RAM_sva.sv(30)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_wr_addr_to_wr_data
                     RAM_sva.sv(32)                     0          1
/WRAPPER_top/DUT_WRAPPER/RAM_instance/RAM_sva_inst/a_rd_addr_to_rd_data
                     RAM_sva.sv(33)                     0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__received_address_p2
                     SPI_slave.sv(236)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__received_address_p1
                     SPI_slave.sv(235)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__counter_write_p
                     SPI_slave.sv(234)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__counter_rst_p
                     SPI_slave.sv(233)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p9
                     SPI_slave.sv(232)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p8
                     SPI_slave.sv(231)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p7
                     SPI_slave.sv(230)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p6
                     SPI_slave.sv(229)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p4
                     SPI_slave.sv(228)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p3
                     SPI_slave.sv(227)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p2
                     SPI_slave.sv(226)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__cs_p1
                     SPI_slave.sv(225)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__rx_valid_p
                     SPI_slave.sv(224)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__read_seq_p
                     SPI_slave.sv(223)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__write_seq_p
                     SPI_slave.sv(222)                  0          1
/WRAPPER_top/DUT_WRAPPER/SLAVE_instance/assert__rst_p
                     SPI_slave.sv(221)                  0          1
/WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst/assert__MISO_wrapper_p
                     WRAPPER_sva.sv(18)                 0          1
/WRAPPER_top/DUT_WRAPPER/WRAPPER_sva_inst/assert__rst_wrapper_p
                     WRAPPER_sva.sv(17)                 0          1
/WRAPPER_sequence_pkg/WRAPPER_write_only_seq/body/#ublk#73704343#37/immed__39
                     WRAPPER_sequence.sv(39)            0          1
/WRAPPER_sequence_pkg/WRAPPER_read_only_seq/body/#anonblk#73704343#58#4#/#ublk#73704343#58/immed__62
                     WRAPPER_sequence.sv(62)            0          1
/WRAPPER_sequence_pkg/WRAPPER_write_read_seq/body/#anonblk#73704343#81#4#/#ublk#73704343#81/immed__85
                     WRAPPER_sequence.sv(85)            0          1

Total Coverage By Instance (filtered view): 86.14%

